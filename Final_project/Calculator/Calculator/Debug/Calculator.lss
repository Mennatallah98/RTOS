
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  00001b1c  00001bb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000002d6  0080008a  0080008a  00001bda  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001bda  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f8  00000000  00000000  00001c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003a4c  00000000  00000000  00001f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001166  00000000  00000000  0000598c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d7f  00000000  00000000  00006af2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008e8  00000000  00000000  00008874  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000010d2  00000000  00000000  0000915c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b4f  00000000  00000000  0000a22e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b8  00000000  00000000  0000cd7d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_7>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	36 03       	mulsu	r19, r22
      56:	16 03       	mulsu	r17, r22
      58:	18 03       	fmul	r17, r16
      5a:	1a 03       	fmul	r17, r18
      5c:	1c 03       	fmul	r17, r20
      5e:	1e 03       	fmul	r17, r22
      60:	20 03       	mulsu	r18, r16
      62:	22 03       	mulsu	r18, r18
      64:	24 03       	mulsu	r18, r20
      66:	26 03       	mulsu	r18, r22
      68:	28 03       	fmul	r18, r16
      6a:	2a 03       	fmul	r18, r18
      6c:	2c 03       	fmul	r18, r20
      6e:	2e 03       	fmul	r18, r22
      70:	30 03       	mulsu	r19, r16
      72:	32 03       	mulsu	r19, r18

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf e5       	ldi	r28, 0x5F	; 95
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	10 e0       	ldi	r17, 0x00	; 0
      82:	a0 e6       	ldi	r26, 0x60	; 96
      84:	b0 e0       	ldi	r27, 0x00	; 0
      86:	ec e1       	ldi	r30, 0x1C	; 28
      88:	fb e1       	ldi	r31, 0x1B	; 27
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	aa 38       	cpi	r26, 0x8A	; 138
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	23 e0       	ldi	r18, 0x03	; 3
      98:	aa e8       	ldi	r26, 0x8A	; 138
      9a:	b0 e0       	ldi	r27, 0x00	; 0
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a0 36       	cpi	r26, 0x60	; 96
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 a6 01 	call	0x34c	; 0x34c <main>
      aa:	0c 94 8c 0d 	jmp	0x1b18	; 0x1b18 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <pvPortMalloc>:
      b2:	cf 93       	push	r28
      b4:	df 93       	push	r29
      b6:	ec 01       	movw	r28, r24
      b8:	0e 94 3d 09 	call	0x127a	; 0x127a <vTaskSuspendAll>
      bc:	20 91 8a 00 	lds	r18, 0x008A	; 0x80008a <__data_end>
      c0:	30 91 8b 00 	lds	r19, 0x008B	; 0x80008b <__data_end+0x1>
      c4:	c9 01       	movw	r24, r18
      c6:	8c 0f       	add	r24, r28
      c8:	9d 1f       	adc	r25, r29
      ca:	88 35       	cpi	r24, 0x58	; 88
      cc:	42 e0       	ldi	r20, 0x02	; 2
      ce:	94 07       	cpc	r25, r20
      d0:	58 f4       	brcc	.+22     	; 0xe8 <pvPortMalloc+0x36>
      d2:	28 17       	cp	r18, r24
      d4:	39 07       	cpc	r19, r25
      d6:	58 f4       	brcc	.+22     	; 0xee <pvPortMalloc+0x3c>
      d8:	e9 01       	movw	r28, r18
      da:	c4 57       	subi	r28, 0x74	; 116
      dc:	df 4f       	sbci	r29, 0xFF	; 255
      de:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__data_end+0x1>
      e2:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__data_end>
      e6:	05 c0       	rjmp	.+10     	; 0xf2 <pvPortMalloc+0x40>
      e8:	c0 e0       	ldi	r28, 0x00	; 0
      ea:	d0 e0       	ldi	r29, 0x00	; 0
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <pvPortMalloc+0x40>
      ee:	c0 e0       	ldi	r28, 0x00	; 0
      f0:	d0 e0       	ldi	r29, 0x00	; 0
      f2:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
      f6:	ce 01       	movw	r24, r28
      f8:	df 91       	pop	r29
      fa:	cf 91       	pop	r28
      fc:	08 95       	ret

000000fe <vPortFree>:
      fe:	08 95       	ret

00000100 <enableTrigger>:
     100:	c2 98       	cbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     102:	89 ef       	ldi	r24, 0xF9	; 249
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	01 97       	sbiw	r24, 0x01	; 1
     108:	f1 f7       	brne	.-4      	; 0x106 <enableTrigger+0x6>
     10a:	00 c0       	rjmp	.+0      	; 0x10c <enableTrigger+0xc>
     10c:	00 00       	nop
     10e:	c2 9a       	sbi	0x18, 2	; 24
     110:	8b ed       	ldi	r24, 0xDB	; 219
     112:	95 e0       	ldi	r25, 0x05	; 5
     114:	01 97       	sbiw	r24, 0x01	; 1
     116:	f1 f7       	brne	.-4      	; 0x114 <enableTrigger+0x14>
     118:	00 c0       	rjmp	.+0      	; 0x11a <enableTrigger+0x1a>
     11a:	00 00       	nop
     11c:	08 95       	ret

0000011e <lcd_sendCommand>:
     11e:	cf 93       	push	r28
     120:	c8 2f       	mov	r28, r24
     122:	c0 98       	cbi	0x18, 0	; 24
     124:	c1 98       	cbi	0x18, 1	; 24
     126:	88 b3       	in	r24, 0x18	; 24
     128:	8f 70       	andi	r24, 0x0F	; 15
     12a:	88 bb       	out	0x18, r24	; 24
     12c:	88 b3       	in	r24, 0x18	; 24
     12e:	9c 2f       	mov	r25, r28
     130:	90 7f       	andi	r25, 0xF0	; 240
     132:	89 2b       	or	r24, r25
     134:	88 bb       	out	0x18, r24	; 24
     136:	0e 94 80 00 	call	0x100	; 0x100 <enableTrigger>
     13a:	88 b3       	in	r24, 0x18	; 24
     13c:	8f 70       	andi	r24, 0x0F	; 15
     13e:	88 bb       	out	0x18, r24	; 24
     140:	88 b3       	in	r24, 0x18	; 24
     142:	c2 95       	swap	r28
     144:	c0 7f       	andi	r28, 0xF0	; 240
     146:	c8 2b       	or	r28, r24
     148:	c8 bb       	out	0x18, r28	; 24
     14a:	0e 94 80 00 	call	0x100	; 0x100 <enableTrigger>
     14e:	cf 91       	pop	r28
     150:	08 95       	ret

00000152 <lcd_init>:
     152:	8f ef       	ldi	r24, 0xFF	; 255
     154:	87 bb       	out	0x17, r24	; 23
     156:	84 e0       	ldi	r24, 0x04	; 4
     158:	88 bb       	out	0x18, r24	; 24
     15a:	83 e3       	ldi	r24, 0x33	; 51
     15c:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     160:	82 e3       	ldi	r24, 0x32	; 50
     162:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     166:	88 e2       	ldi	r24, 0x28	; 40
     168:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     16c:	8c e0       	ldi	r24, 0x0C	; 12
     16e:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     172:	08 95       	ret

00000174 <lcd_displayChar>:
     174:	cf 93       	push	r28
     176:	c8 2f       	mov	r28, r24
     178:	c0 9a       	sbi	0x18, 0	; 24
     17a:	c1 98       	cbi	0x18, 1	; 24
     17c:	88 b3       	in	r24, 0x18	; 24
     17e:	8f 70       	andi	r24, 0x0F	; 15
     180:	88 bb       	out	0x18, r24	; 24
     182:	88 b3       	in	r24, 0x18	; 24
     184:	9c 2f       	mov	r25, r28
     186:	90 7f       	andi	r25, 0xF0	; 240
     188:	89 2b       	or	r24, r25
     18a:	88 bb       	out	0x18, r24	; 24
     18c:	0e 94 80 00 	call	0x100	; 0x100 <enableTrigger>
     190:	88 b3       	in	r24, 0x18	; 24
     192:	8f 70       	andi	r24, 0x0F	; 15
     194:	88 bb       	out	0x18, r24	; 24
     196:	88 b3       	in	r24, 0x18	; 24
     198:	c2 95       	swap	r28
     19a:	c0 7f       	andi	r28, 0xF0	; 240
     19c:	c8 2b       	or	r28, r24
     19e:	c8 bb       	out	0x18, r28	; 24
     1a0:	0e 94 80 00 	call	0x100	; 0x100 <enableTrigger>
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <lcd_gotoxy>:
     1a8:	81 30       	cpi	r24, 0x01	; 1
     1aa:	49 f0       	breq	.+18     	; 0x1be <lcd_gotoxy+0x16>
     1ac:	28 f0       	brcs	.+10     	; 0x1b8 <lcd_gotoxy+0x10>
     1ae:	82 30       	cpi	r24, 0x02	; 2
     1b0:	49 f0       	breq	.+18     	; 0x1c4 <lcd_gotoxy+0x1c>
     1b2:	83 30       	cpi	r24, 0x03	; 3
     1b4:	51 f0       	breq	.+20     	; 0x1ca <lcd_gotoxy+0x22>
     1b6:	0c c0       	rjmp	.+24     	; 0x1d0 <lcd_gotoxy+0x28>
     1b8:	80 e8       	ldi	r24, 0x80	; 128
     1ba:	86 0f       	add	r24, r22
     1bc:	0a c0       	rjmp	.+20     	; 0x1d2 <lcd_gotoxy+0x2a>
     1be:	80 ec       	ldi	r24, 0xC0	; 192
     1c0:	86 0f       	add	r24, r22
     1c2:	07 c0       	rjmp	.+14     	; 0x1d2 <lcd_gotoxy+0x2a>
     1c4:	80 e8       	ldi	r24, 0x80	; 128
     1c6:	86 0f       	add	r24, r22
     1c8:	04 c0       	rjmp	.+8      	; 0x1d2 <lcd_gotoxy+0x2a>
     1ca:	80 e8       	ldi	r24, 0x80	; 128
     1cc:	86 0f       	add	r24, r22
     1ce:	01 c0       	rjmp	.+2      	; 0x1d2 <lcd_gotoxy+0x2a>
     1d0:	80 e8       	ldi	r24, 0x80	; 128
     1d2:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     1d6:	08 95       	ret

000001d8 <lcd_clrScreen>:
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_sendCommand>
     1de:	08 95       	ret

000001e0 <lcd_dispString>:
     1e0:	cf 93       	push	r28
     1e2:	df 93       	push	r29
     1e4:	ec 01       	movw	r28, r24
     1e6:	88 81       	ld	r24, Y
     1e8:	88 23       	and	r24, r24
     1ea:	31 f0       	breq	.+12     	; 0x1f8 <lcd_dispString+0x18>
     1ec:	21 96       	adiw	r28, 0x01	; 1
     1ee:	0e 94 ba 00 	call	0x174	; 0x174 <lcd_displayChar>
     1f2:	89 91       	ld	r24, Y+
     1f4:	81 11       	cpse	r24, r1
     1f6:	fb cf       	rjmp	.-10     	; 0x1ee <lcd_dispString+0xe>
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <lcd_disp_string_xy>:
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	ec 01       	movw	r28, r24
     204:	86 2f       	mov	r24, r22
     206:	64 2f       	mov	r22, r20
     208:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_gotoxy>
     20c:	ce 01       	movw	r24, r28
     20e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_dispString>
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	08 95       	ret

00000218 <vListInitialise>:
     218:	fc 01       	movw	r30, r24
     21a:	03 96       	adiw	r24, 0x03	; 3
     21c:	92 83       	std	Z+2, r25	; 0x02
     21e:	81 83       	std	Z+1, r24	; 0x01
     220:	2f ef       	ldi	r18, 0xFF	; 255
     222:	3f ef       	ldi	r19, 0xFF	; 255
     224:	34 83       	std	Z+4, r19	; 0x04
     226:	23 83       	std	Z+3, r18	; 0x03
     228:	96 83       	std	Z+6, r25	; 0x06
     22a:	85 83       	std	Z+5, r24	; 0x05
     22c:	90 87       	std	Z+8, r25	; 0x08
     22e:	87 83       	std	Z+7, r24	; 0x07
     230:	10 82       	st	Z, r1
     232:	08 95       	ret

00000234 <vListInitialiseItem>:
     234:	fc 01       	movw	r30, r24
     236:	11 86       	std	Z+9, r1	; 0x09
     238:	10 86       	std	Z+8, r1	; 0x08
     23a:	08 95       	ret

0000023c <vListInsertEnd>:
     23c:	cf 93       	push	r28
     23e:	df 93       	push	r29
     240:	fc 01       	movw	r30, r24
     242:	db 01       	movw	r26, r22
     244:	21 81       	ldd	r18, Z+1	; 0x01
     246:	32 81       	ldd	r19, Z+2	; 0x02
     248:	e9 01       	movw	r28, r18
     24a:	8a 81       	ldd	r24, Y+2	; 0x02
     24c:	9b 81       	ldd	r25, Y+3	; 0x03
     24e:	13 96       	adiw	r26, 0x03	; 3
     250:	9c 93       	st	X, r25
     252:	8e 93       	st	-X, r24
     254:	12 97       	sbiw	r26, 0x02	; 2
     256:	81 81       	ldd	r24, Z+1	; 0x01
     258:	92 81       	ldd	r25, Z+2	; 0x02
     25a:	15 96       	adiw	r26, 0x05	; 5
     25c:	9c 93       	st	X, r25
     25e:	8e 93       	st	-X, r24
     260:	14 97       	sbiw	r26, 0x04	; 4
     262:	8a 81       	ldd	r24, Y+2	; 0x02
     264:	9b 81       	ldd	r25, Y+3	; 0x03
     266:	ec 01       	movw	r28, r24
     268:	7d 83       	std	Y+5, r23	; 0x05
     26a:	6c 83       	std	Y+4, r22	; 0x04
     26c:	e9 01       	movw	r28, r18
     26e:	7b 83       	std	Y+3, r23	; 0x03
     270:	6a 83       	std	Y+2, r22	; 0x02
     272:	72 83       	std	Z+2, r23	; 0x02
     274:	61 83       	std	Z+1, r22	; 0x01
     276:	19 96       	adiw	r26, 0x09	; 9
     278:	fc 93       	st	X, r31
     27a:	ee 93       	st	-X, r30
     27c:	18 97       	sbiw	r26, 0x08	; 8
     27e:	80 81       	ld	r24, Z
     280:	8f 5f       	subi	r24, 0xFF	; 255
     282:	80 83       	st	Z, r24
     284:	df 91       	pop	r29
     286:	cf 91       	pop	r28
     288:	08 95       	ret

0000028a <vListInsert>:
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	eb 01       	movw	r28, r22
     290:	48 81       	ld	r20, Y
     292:	59 81       	ldd	r21, Y+1	; 0x01
     294:	4f 3f       	cpi	r20, 0xFF	; 255
     296:	2f ef       	ldi	r18, 0xFF	; 255
     298:	52 07       	cpc	r21, r18
     29a:	31 f4       	brne	.+12     	; 0x2a8 <vListInsert+0x1e>
     29c:	dc 01       	movw	r26, r24
     29e:	17 96       	adiw	r26, 0x07	; 7
     2a0:	ed 91       	ld	r30, X+
     2a2:	fc 91       	ld	r31, X
     2a4:	18 97       	sbiw	r26, 0x08	; 8
     2a6:	17 c0       	rjmp	.+46     	; 0x2d6 <vListInsert+0x4c>
     2a8:	fc 01       	movw	r30, r24
     2aa:	33 96       	adiw	r30, 0x03	; 3
     2ac:	dc 01       	movw	r26, r24
     2ae:	15 96       	adiw	r26, 0x05	; 5
     2b0:	2d 91       	ld	r18, X+
     2b2:	3c 91       	ld	r19, X
     2b4:	16 97       	sbiw	r26, 0x06	; 6
     2b6:	d9 01       	movw	r26, r18
     2b8:	2d 91       	ld	r18, X+
     2ba:	3c 91       	ld	r19, X
     2bc:	42 17       	cp	r20, r18
     2be:	53 07       	cpc	r21, r19
     2c0:	50 f0       	brcs	.+20     	; 0x2d6 <vListInsert+0x4c>
     2c2:	02 80       	ldd	r0, Z+2	; 0x02
     2c4:	f3 81       	ldd	r31, Z+3	; 0x03
     2c6:	e0 2d       	mov	r30, r0
     2c8:	a2 81       	ldd	r26, Z+2	; 0x02
     2ca:	b3 81       	ldd	r27, Z+3	; 0x03
     2cc:	2d 91       	ld	r18, X+
     2ce:	3c 91       	ld	r19, X
     2d0:	42 17       	cp	r20, r18
     2d2:	53 07       	cpc	r21, r19
     2d4:	b0 f7       	brcc	.-20     	; 0x2c2 <vListInsert+0x38>
     2d6:	a2 81       	ldd	r26, Z+2	; 0x02
     2d8:	b3 81       	ldd	r27, Z+3	; 0x03
     2da:	bb 83       	std	Y+3, r27	; 0x03
     2dc:	aa 83       	std	Y+2, r26	; 0x02
     2de:	15 96       	adiw	r26, 0x05	; 5
     2e0:	dc 93       	st	X, r29
     2e2:	ce 93       	st	-X, r28
     2e4:	14 97       	sbiw	r26, 0x04	; 4
     2e6:	fd 83       	std	Y+5, r31	; 0x05
     2e8:	ec 83       	std	Y+4, r30	; 0x04
     2ea:	d3 83       	std	Z+3, r29	; 0x03
     2ec:	c2 83       	std	Z+2, r28	; 0x02
     2ee:	99 87       	std	Y+9, r25	; 0x09
     2f0:	88 87       	std	Y+8, r24	; 0x08
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 81       	ld	r18, Z
     2f6:	2f 5f       	subi	r18, 0xFF	; 255
     2f8:	20 83       	st	Z, r18
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <vListRemove>:
     300:	fc 01       	movw	r30, r24
     302:	a2 81       	ldd	r26, Z+2	; 0x02
     304:	b3 81       	ldd	r27, Z+3	; 0x03
     306:	84 81       	ldd	r24, Z+4	; 0x04
     308:	95 81       	ldd	r25, Z+5	; 0x05
     30a:	15 96       	adiw	r26, 0x05	; 5
     30c:	9c 93       	st	X, r25
     30e:	8e 93       	st	-X, r24
     310:	14 97       	sbiw	r26, 0x04	; 4
     312:	a4 81       	ldd	r26, Z+4	; 0x04
     314:	b5 81       	ldd	r27, Z+5	; 0x05
     316:	82 81       	ldd	r24, Z+2	; 0x02
     318:	93 81       	ldd	r25, Z+3	; 0x03
     31a:	13 96       	adiw	r26, 0x03	; 3
     31c:	9c 93       	st	X, r25
     31e:	8e 93       	st	-X, r24
     320:	12 97       	sbiw	r26, 0x02	; 2
     322:	a0 85       	ldd	r26, Z+8	; 0x08
     324:	b1 85       	ldd	r27, Z+9	; 0x09
     326:	11 96       	adiw	r26, 0x01	; 1
     328:	8d 91       	ld	r24, X+
     32a:	9c 91       	ld	r25, X
     32c:	12 97       	sbiw	r26, 0x02	; 2
     32e:	e8 17       	cp	r30, r24
     330:	f9 07       	cpc	r31, r25
     332:	31 f4       	brne	.+12     	; 0x340 <vListRemove+0x40>
     334:	84 81       	ldd	r24, Z+4	; 0x04
     336:	95 81       	ldd	r25, Z+5	; 0x05
     338:	12 96       	adiw	r26, 0x02	; 2
     33a:	9c 93       	st	X, r25
     33c:	8e 93       	st	-X, r24
     33e:	11 97       	sbiw	r26, 0x01	; 1
     340:	11 86       	std	Z+9, r1	; 0x09
     342:	10 86       	std	Z+8, r1	; 0x08
     344:	8c 91       	ld	r24, X
     346:	81 50       	subi	r24, 0x01	; 1
     348:	8c 93       	st	X, r24
     34a:	08 95       	ret

0000034c <main>:
	PORTB &= 0xF7;
	
}

void LedRising(void)
{
     34c:	af 92       	push	r10
     34e:	bf 92       	push	r11
     350:	cf 92       	push	r12
     352:	df 92       	push	r13
     354:	ef 92       	push	r14
     356:	ff 92       	push	r15
     358:	0f 93       	push	r16
     35a:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_init>
     35e:	8f ef       	ldi	r24, 0xFF	; 255
     360:	87 bb       	out	0x17, r24	; 23
     362:	a1 2c       	mov	r10, r1
     364:	b1 2c       	mov	r11, r1
     366:	c1 2c       	mov	r12, r1
     368:	d1 2c       	mov	r13, r1
     36a:	0f 2e       	mov	r0, r31
     36c:	fa e5       	ldi	r31, 0x5A	; 90
     36e:	ef 2e       	mov	r14, r31
     370:	f3 e0       	ldi	r31, 0x03	; 3
     372:	ff 2e       	mov	r15, r31
     374:	f0 2d       	mov	r31, r0
     376:	03 e0       	ldi	r16, 0x03	; 3
     378:	20 e0       	ldi	r18, 0x00	; 0
     37a:	30 e0       	ldi	r19, 0x00	; 0
     37c:	44 e6       	ldi	r20, 0x64	; 100
     37e:	50 e0       	ldi	r21, 0x00	; 0
     380:	60 e0       	ldi	r22, 0x00	; 0
     382:	70 e0       	ldi	r23, 0x00	; 0
     384:	8f e4       	ldi	r24, 0x4F	; 79
     386:	92 e0       	ldi	r25, 0x02	; 2
     388:	0e 94 bb 07 	call	0xf76	; 0xf76 <xTaskGenericCreate>
     38c:	0f 2e       	mov	r0, r31
     38e:	fe e5       	ldi	r31, 0x5E	; 94
     390:	ef 2e       	mov	r14, r31
     392:	f3 e0       	ldi	r31, 0x03	; 3
     394:	ff 2e       	mov	r15, r31
     396:	f0 2d       	mov	r31, r0
     398:	02 e0       	ldi	r16, 0x02	; 2
     39a:	20 e0       	ldi	r18, 0x00	; 0
     39c:	30 e0       	ldi	r19, 0x00	; 0
     39e:	44 e6       	ldi	r20, 0x64	; 100
     3a0:	50 e0       	ldi	r21, 0x00	; 0
     3a2:	60 e0       	ldi	r22, 0x00	; 0
     3a4:	70 e0       	ldi	r23, 0x00	; 0
     3a6:	86 e9       	ldi	r24, 0x96	; 150
     3a8:	93 e0       	ldi	r25, 0x03	; 3
     3aa:	0e 94 bb 07 	call	0xf76	; 0xf76 <xTaskGenericCreate>
     3ae:	0f 2e       	mov	r0, r31
     3b0:	f4 e5       	ldi	r31, 0x54	; 84
     3b2:	ef 2e       	mov	r14, r31
     3b4:	f3 e0       	ldi	r31, 0x03	; 3
     3b6:	ff 2e       	mov	r15, r31
     3b8:	f0 2d       	mov	r31, r0
     3ba:	01 e0       	ldi	r16, 0x01	; 1
     3bc:	20 e0       	ldi	r18, 0x00	; 0
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	44 e6       	ldi	r20, 0x64	; 100
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	83 ec       	ldi	r24, 0xC3	; 195
     3ca:	92 e0       	ldi	r25, 0x02	; 2
     3cc:	0e 94 bb 07 	call	0xf76	; 0xf76 <xTaskGenericCreate>
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	0e 94 ee 05 	call	0xbdc	; 0xbdc <xQueueCreate>
     3d8:	90 93 57 03 	sts	0x0357, r25	; 0x800357 <xSemaphore+0x1>
     3dc:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <xSemaphore>
     3e0:	00 97       	sbiw	r24, 0x00	; 0
     3e2:	39 f0       	breq	.+14     	; 0x3f2 <main+0xa6>
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	40 e0       	ldi	r20, 0x00	; 0
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	0e 94 3e 06 	call	0xc7c	; 0xc7c <xQueueGenericSend>
     3f2:	0e 94 12 09 	call	0x1224	; 0x1224 <vTaskStartScheduler>
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	0f 91       	pop	r16
     3fc:	ff 90       	pop	r15
     3fe:	ef 90       	pop	r14
     400:	df 90       	pop	r13
     402:	cf 90       	pop	r12
     404:	bf 90       	pop	r11
     406:	af 90       	pop	r10
     408:	08 95       	ret

0000040a <LcdWrite_move>:
     40a:	40 91 e6 02 	lds	r20, 0x02E6	; 0x8002e6 <x>
     40e:	50 91 e7 02 	lds	r21, 0x02E7	; 0x8002e7 <x+0x1>
     412:	60 e0       	ldi	r22, 0x00	; 0
     414:	70 e0       	ldi	r23, 0x00	; 0
     416:	82 e6       	ldi	r24, 0x62	; 98
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_disp_string_xy>
     41e:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <x>
     422:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <x+0x1>
     426:	00 97       	sbiw	r24, 0x00	; 0
     428:	a1 f4       	brne	.+40     	; 0x452 <LcdWrite_move+0x48>
     42a:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <direction+0x1>
     42e:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <direction>
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <x+0x1>
     43a:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <x>
     43e:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <counter>
     442:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <counter+0x1>
     446:	01 96       	adiw	r24, 0x01	; 1
     448:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <counter+0x1>
     44c:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <counter>
     450:	08 95       	ret
     452:	89 30       	cpi	r24, 0x09	; 9
     454:	91 05       	cpc	r25, r1
     456:	69 f4       	brne	.+26     	; 0x472 <LcdWrite_move+0x68>
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	90 93 59 03 	sts	0x0359, r25	; 0x800359 <direction+0x1>
     460:	80 93 58 03 	sts	0x0358, r24	; 0x800358 <direction>
     464:	88 e0       	ldi	r24, 0x08	; 8
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <x+0x1>
     46c:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <x>
     470:	08 95       	ret
     472:	20 91 58 03 	lds	r18, 0x0358	; 0x800358 <direction>
     476:	30 91 59 03 	lds	r19, 0x0359	; 0x800359 <direction+0x1>
     47a:	21 15       	cp	r18, r1
     47c:	31 05       	cpc	r19, r1
     47e:	31 f4       	brne	.+12     	; 0x48c <LcdWrite_move+0x82>
     480:	01 96       	adiw	r24, 0x01	; 1
     482:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <x+0x1>
     486:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <x>
     48a:	08 95       	ret
     48c:	21 30       	cpi	r18, 0x01	; 1
     48e:	31 05       	cpc	r19, r1
     490:	29 f4       	brne	.+10     	; 0x49c <LcdWrite_move+0x92>
     492:	01 97       	sbiw	r24, 0x01	; 1
     494:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <x+0x1>
     498:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <x>
     49c:	08 95       	ret

0000049e <period_lcd_welcome>:
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	00 d0       	rcall	.+0      	; 0x4a4 <period_lcd_welcome+0x6>
     4a4:	cd b7       	in	r28, 0x3d	; 61
     4a6:	de b7       	in	r29, 0x3e	; 62
     4a8:	0e 94 43 09 	call	0x1286	; 0x1286 <xTaskGetTickCount>
     4ac:	9a 83       	std	Y+2, r25	; 0x02
     4ae:	89 83       	std	Y+1, r24	; 0x01
     4b0:	20 e0       	ldi	r18, 0x00	; 0
     4b2:	4f ef       	ldi	r20, 0xFF	; 255
     4b4:	5f ef       	ldi	r21, 0xFF	; 255
     4b6:	60 e0       	ldi	r22, 0x00	; 0
     4b8:	70 e0       	ldi	r23, 0x00	; 0
     4ba:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     4be:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     4c2:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <xQueueGenericReceive>
     4c6:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <counter>
     4ca:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <counter+0x1>
     4ce:	04 97       	sbiw	r24, 0x04	; 4
     4d0:	84 f4       	brge	.+32     	; 0x4f2 <period_lcd_welcome+0x54>
     4d2:	69 e1       	ldi	r22, 0x19	; 25
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
     4de:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrScreen>
     4e2:	0e 94 05 02 	call	0x40a	; 0x40a <LcdWrite_move>
     4e6:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <counter>
     4ea:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <counter+0x1>
     4ee:	04 97       	sbiw	r24, 0x04	; 4
     4f0:	84 f3       	brlt	.-32     	; 0x4d2 <period_lcd_welcome+0x34>
     4f2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrScreen>
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	40 e0       	ldi	r20, 0x00	; 0
     4fa:	50 e0       	ldi	r21, 0x00	; 0
     4fc:	60 e0       	ldi	r22, 0x00	; 0
     4fe:	70 e0       	ldi	r23, 0x00	; 0
     500:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     504:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     508:	0e 94 3e 06 	call	0xc7c	; 0xc7c <xQueueGenericSend>
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskDelete>
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	df 91       	pop	r29
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <LcdWrite_blink>:
     51e:	40 e0       	ldi	r20, 0x00	; 0
     520:	50 e0       	ldi	r21, 0x00	; 0
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	8a e6       	ldi	r24, 0x6A	; 106
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_disp_string_xy>
     52e:	44 e0       	ldi	r20, 0x04	; 4
     530:	50 e0       	ldi	r21, 0x00	; 0
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	8c e7       	ldi	r24, 0x7C	; 124
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 ff 00 	call	0x1fe	; 0x1fe <lcd_disp_string_xy>
     53e:	08 95       	ret

00000540 <LedHigh>:
     540:	c3 9a       	sbi	0x18, 3	; 24
     542:	08 95       	ret

00000544 <LedLow>:
     544:	c3 98       	cbi	0x18, 3	; 24
     546:	08 95       	ret

00000548 <LedFalling>:
		_delay_ms(25);		
	}	
}

void LedFalling(void)
{
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
	int x;
	for(x=10;x--;x>=0)
     54c:	c9 e0       	ldi	r28, 0x09	; 9
     54e:	d0 e0       	ldi	r29, 0x00	; 0
	{
		OCR0 = 25.5*x;
     550:	be 01       	movw	r22, r28
     552:	0d 2e       	mov	r0, r29
     554:	00 0c       	add	r0, r0
     556:	88 0b       	sbc	r24, r24
     558:	99 0b       	sbc	r25, r25
     55a:	0e 94 6e 0c 	call	0x18dc	; 0x18dc <__floatsisf>
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	4c ec       	ldi	r20, 0xCC	; 204
     564:	51 e4       	ldi	r21, 0x41	; 65
     566:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <__mulsf3>
     56a:	0e 94 3d 0c 	call	0x187a	; 0x187a <__fixunssfsi>
     56e:	6c bf       	out	0x3c, r22	; 60
     570:	8f e4       	ldi	r24, 0x4F	; 79
     572:	93 ec       	ldi	r25, 0xC3	; 195
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	f1 f7       	brne	.-4      	; 0x574 <LedFalling+0x2c>
     578:	00 c0       	rjmp	.+0      	; 0x57a <LedFalling+0x32>
     57a:	00 00       	nop
}

void LedFalling(void)
{
	int x;
	for(x=10;x--;x>=0)
     57c:	21 97       	sbiw	r28, 0x01	; 1
     57e:	40 f7       	brcc	.-48     	; 0x550 <LedFalling+0x8>
	{
		OCR0 = 25.5*x;
		_delay_ms(25);
	}
}
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	08 95       	ret

00000586 <period_blinking>:
	xSemaphoreGive(xSemaphore);
	vTaskDelete(NULL);
}

void period_blinking(void *p)
{
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	00 d0       	rcall	.+0      	; 0x58c <period_blinking+0x6>
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
	portTickType xLastWakeTime;
	const portTickType xPeriod = 250;
	const portTickType time = portMAX_DELAY;
	xLastWakeTime = xTaskGetTickCount();
     590:	0e 94 43 09 	call	0x1286	; 0x1286 <xTaskGetTickCount>
     594:	9a 83       	std	Y+2, r25	; 0x02
     596:	89 83       	std	Y+1, r24	; 0x01
	if(xSemaphoreTake(xSemaphore,time)==pdTRUE)
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	4f ef       	ldi	r20, 0xFF	; 255
     59c:	5f ef       	ldi	r21, 0xFF	; 255
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     5a6:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     5aa:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <xQueueGenericReceive>
     5ae:	81 30       	cpi	r24, 0x01	; 1
     5b0:	f9 f4       	brne	.+62     	; 0x5f0 <period_blinking+0x6a>
	{
		while(1)
		{
			LedRising();
			vTaskDelayUntil( &xLastWakeTime, xPeriod);			
     5b2:	6a ef       	ldi	r22, 0xFA	; 250
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	ce 01       	movw	r24, r28
     5b8:	01 96       	adiw	r24, 0x01	; 1
     5ba:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
			LedHigh();
     5be:	0e 94 a0 02 	call	0x540	; 0x540 <LedHigh>
			vTaskDelayUntil( &xLastWakeTime, xPeriod );
     5c2:	6a ef       	ldi	r22, 0xFA	; 250
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	ce 01       	movw	r24, r28
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
			LedFalling();
     5ce:	0e 94 a4 02 	call	0x548	; 0x548 <LedFalling>
			vTaskDelayUntil( &xLastWakeTime, xPeriod);			
     5d2:	6a ef       	ldi	r22, 0xFA	; 250
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	ce 01       	movw	r24, r28
     5d8:	01 96       	adiw	r24, 0x01	; 1
     5da:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
			LedLow();
     5de:	0e 94 a2 02 	call	0x544	; 0x544 <LedLow>
			vTaskDelayUntil( &xLastWakeTime, xPeriod );
     5e2:	6a ef       	ldi	r22, 0xFA	; 250
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	ce 01       	movw	r24, r28
     5e8:	01 96       	adiw	r24, 0x01	; 1
     5ea:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
     5ee:	e1 cf       	rjmp	.-62     	; 0x5b2 <period_blinking+0x2c>
		}
	}
	xSemaphoreGive(xSemaphore);
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	40 e0       	ldi	r20, 0x00	; 0
     5f4:	50 e0       	ldi	r21, 0x00	; 0
     5f6:	60 e0       	ldi	r22, 0x00	; 0
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     5fe:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     602:	0e 94 3e 06 	call	0xc7c	; 0xc7c <xQueueGenericSend>
	vTaskDelete(NULL);	
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskDelete>
}
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <KeyPad_AdjustKeyNumber>:
	return NULL;//Indicate No key pressed
}

unsigned char KeyPad_AdjustKeyNumber(unsigned char button_number)
{
	switch(button_number)
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	fc 01       	movw	r30, r24
     61c:	31 97       	sbiw	r30, 0x01	; 1
     61e:	e0 31       	cpi	r30, 0x10	; 16
     620:	f1 05       	cpc	r31, r1
     622:	10 f5       	brcc	.+68     	; 0x668 <KeyPad_AdjustKeyNumber+0x50>
     624:	e6 5d       	subi	r30, 0xD6	; 214
     626:	ff 4f       	sbci	r31, 0xFF	; 255
     628:	0c 94 67 0d 	jmp	0x1ace	; 0x1ace <__tablejump2__>
	{
		case 1: return '7';
		break;
		case 2: return '8';
     62c:	88 e3       	ldi	r24, 0x38	; 56
     62e:	08 95       	ret
		break;
		case 3: return '9';
     630:	89 e3       	ldi	r24, 0x39	; 57
     632:	08 95       	ret
		break;
		case 4: return '0'; // ASCII Code of %
     634:	80 e3       	ldi	r24, 0x30	; 48
     636:	08 95       	ret
		break;
		case 5: return '4';
     638:	84 e3       	ldi	r24, 0x34	; 52
     63a:	08 95       	ret
		break;
		case 6: return '5';
     63c:	85 e3       	ldi	r24, 0x35	; 53
     63e:	08 95       	ret
		break;
		case 7: return '6';
     640:	86 e3       	ldi	r24, 0x36	; 54
     642:	08 95       	ret
		break;
		case 8: return '*'; /* ASCII Code of '*' */
     644:	8a e2       	ldi	r24, 0x2A	; 42
     646:	08 95       	ret
		break;
		case 9: return '1';
     648:	81 e3       	ldi	r24, 0x31	; 49
     64a:	08 95       	ret
		break;
		case 10: return '2';
     64c:	82 e3       	ldi	r24, 0x32	; 50
     64e:	08 95       	ret
		break;
		case 11: return '3';
     650:	83 e3       	ldi	r24, 0x33	; 51
     652:	08 95       	ret
		break;
		case 12: return '-'; /* ASCII Code of '-' */
     654:	8d e2       	ldi	r24, 0x2D	; 45
     656:	08 95       	ret
		break;
		case 13: return 13;  /* ASCII of Enter */
     658:	8d e0       	ldi	r24, 0x0D	; 13
     65a:	08 95       	ret
		break;
		case 14: return '0';
     65c:	80 e3       	ldi	r24, 0x30	; 48
     65e:	08 95       	ret
		break;
		case 15: return '='; /* ASCII Code of '=' */
     660:	8d e3       	ldi	r24, 0x3D	; 61
     662:	08 95       	ret
		break;
		case 16: return '+'; /* ASCII Code of '+' */
     664:	8b e2       	ldi	r24, 0x2B	; 43
     666:	08 95       	ret
		break;
		default: return NULL;
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	08 95       	ret

unsigned char KeyPad_AdjustKeyNumber(unsigned char button_number)
{
	switch(button_number)
	{
		case 1: return '7';
     66c:	87 e3       	ldi	r24, 0x37	; 55
		case 16: return '+'; /* ASCII Code of '+' */
		break;
		default: return NULL;
	}

}
     66e:	08 95       	ret

00000670 <GetKeyPressed>:
		_delay_ms(25);
	}
}

unsigned char GetKeyPressed(void)
{
     670:	af 92       	push	r10
     672:	bf 92       	push	r11
     674:	cf 92       	push	r12
     676:	df 92       	push	r13
     678:	ef 92       	push	r14
     67a:	ff 92       	push	r15
     67c:	0f 93       	push	r16
     67e:	1f 93       	push	r17
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
	 unsigned char r,c;
	KEYPAD_PORT|= 0X0F;
     684:	85 b3       	in	r24, 0x15	; 21
     686:	8f 60       	ori	r24, 0x0F	; 15
     688:	85 bb       	out	0x15, r24	; 21
     68a:	00 e0       	ldi	r16, 0x00	; 0
     68c:	10 e0       	ldi	r17, 0x00	; 0
	
	for(c=0;c<4;c++)
	{
		KEYPAD_DDR &=~(0X7F);
		KEYPAD_DDR |=(0X40>>c);
     68e:	68 94       	set
     690:	cc 24       	eor	r12, r12
     692:	c6 f8       	bld	r12, 6
     694:	d1 2c       	mov	r13, r1
		for(r=0;r<4;r++)
		{
			if(!(KEYPAD_PIN & (0X08>>r)))
     696:	68 94       	set
     698:	ee 24       	eor	r14, r14
     69a:	e3 f8       	bld	r14, 3
     69c:	f1 2c       	mov	r15, r1
     69e:	b0 2e       	mov	r11, r16
	 unsigned char r,c;
	KEYPAD_PORT|= 0X0F;
	
	for(c=0;c<4;c++)
	{
		KEYPAD_DDR &=~(0X7F);
     6a0:	84 b3       	in	r24, 0x14	; 20
     6a2:	80 78       	andi	r24, 0x80	; 128
     6a4:	84 bb       	out	0x14, r24	; 20
		KEYPAD_DDR |=(0X40>>c);
     6a6:	84 b3       	in	r24, 0x14	; 20
     6a8:	96 01       	movw	r18, r12
     6aa:	00 2e       	mov	r0, r16
     6ac:	02 c0       	rjmp	.+4      	; 0x6b2 <GetKeyPressed+0x42>
     6ae:	35 95       	asr	r19
     6b0:	27 95       	ror	r18
     6b2:	0a 94       	dec	r0
     6b4:	e2 f7       	brpl	.-8      	; 0x6ae <GetKeyPressed+0x3e>
     6b6:	28 2b       	or	r18, r24
     6b8:	24 bb       	out	0x14, r18	; 20
     6ba:	c0 e0       	ldi	r28, 0x00	; 0
     6bc:	d0 e0       	ldi	r29, 0x00	; 0
     6be:	ac 2e       	mov	r10, r28
		for(r=0;r<4;r++)
		{
			if(!(KEYPAD_PIN & (0X08>>r)))
     6c0:	23 b3       	in	r18, 0x13	; 19
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	a7 01       	movw	r20, r14
     6c6:	0c 2e       	mov	r0, r28
     6c8:	02 c0       	rjmp	.+4      	; 0x6ce <GetKeyPressed+0x5e>
     6ca:	55 95       	asr	r21
     6cc:	47 95       	ror	r20
     6ce:	0a 94       	dec	r0
     6d0:	e2 f7       	brpl	.-8      	; 0x6ca <GetKeyPressed+0x5a>
     6d2:	24 23       	and	r18, r20
     6d4:	35 23       	and	r19, r21
     6d6:	23 2b       	or	r18, r19
     6d8:	a1 f4       	brne	.+40     	; 0x702 <GetKeyPressed+0x92>
			 {	
				if(xSemaphoreTake(xSemaphore,portMAX_DELAY)==pdTRUE)
     6da:	20 e0       	ldi	r18, 0x00	; 0
     6dc:	4f ef       	ldi	r20, 0xFF	; 255
     6de:	5f ef       	ldi	r21, 0xFF	; 255
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     6e8:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     6ec:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <xQueueGenericReceive>
     6f0:	81 30       	cpi	r24, 0x01	; 1
     6f2:	39 f4       	brne	.+14     	; 0x702 <GetKeyPressed+0x92>
				{
					return KeyPad_AdjustKeyNumber((r*4)+c+1);					
     6f4:	aa 0c       	add	r10, r10
     6f6:	aa 0c       	add	r10, r10
     6f8:	8b 0d       	add	r24, r11
     6fa:	8a 0d       	add	r24, r10
     6fc:	0e 94 0c 03 	call	0x618	; 0x618 <KeyPad_AdjustKeyNumber>
     700:	0a c0       	rjmp	.+20     	; 0x716 <GetKeyPressed+0xa6>
     702:	21 96       	adiw	r28, 0x01	; 1
	
	for(c=0;c<4;c++)
	{
		KEYPAD_DDR &=~(0X7F);
		KEYPAD_DDR |=(0X40>>c);
		for(r=0;r<4;r++)
     704:	c4 30       	cpi	r28, 0x04	; 4
     706:	d1 05       	cpc	r29, r1
     708:	d1 f6       	brne	.-76     	; 0x6be <GetKeyPressed+0x4e>
     70a:	0f 5f       	subi	r16, 0xFF	; 255
     70c:	1f 4f       	sbci	r17, 0xFF	; 255
unsigned char GetKeyPressed(void)
{
	 unsigned char r,c;
	KEYPAD_PORT|= 0X0F;
	
	for(c=0;c<4;c++)
     70e:	04 30       	cpi	r16, 0x04	; 4
     710:	11 05       	cpc	r17, r1
     712:	29 f6       	brne	.-118    	; 0x69e <GetKeyPressed+0x2e>
				}		 				
			 }
		}
	}
	
	return NULL;//Indicate No key pressed
     714:	80 e0       	ldi	r24, 0x00	; 0
}
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	1f 91       	pop	r17
     71c:	0f 91       	pop	r16
     71e:	ff 90       	pop	r15
     720:	ef 90       	pop	r14
     722:	df 90       	pop	r13
     724:	cf 90       	pop	r12
     726:	bf 90       	pop	r11
     728:	af 90       	pop	r10
     72a:	08 95       	ret

0000072c <period_lcd_press>:
	xSemaphoreGive(xSemaphore);
	vTaskDelete(NULL);
}

void period_lcd_press(void *p)
{
     72c:	af 92       	push	r10
     72e:	bf 92       	push	r11
     730:	cf 92       	push	r12
     732:	df 92       	push	r13
     734:	ef 92       	push	r14
     736:	ff 92       	push	r15
     738:	0f 93       	push	r16
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	00 d0       	rcall	.+0      	; 0x740 <period_lcd_press+0x14>
     740:	cd b7       	in	r28, 0x3d	; 61
     742:	de b7       	in	r29, 0x3e	; 62
	portTickType xLastWakeTime;
	const portTickType xPeriod_on  = 500;
	const portTickType xPeriod_off = 250;
	const portTickType time = portMAX_DELAY;	
	xLastWakeTime = xTaskGetTickCount();
     744:	0e 94 43 09 	call	0x1286	; 0x1286 <xTaskGetTickCount>
     748:	9a 83       	std	Y+2, r25	; 0x02
     74a:	89 83       	std	Y+1, r24	; 0x01
	if(xSemaphoreTake(xSemaphore,time)==pdTRUE)
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	4f ef       	ldi	r20, 0xFF	; 255
     750:	5f ef       	ldi	r21, 0xFF	; 255
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     75a:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     75e:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <xQueueGenericReceive>
     762:	81 30       	cpi	r24, 0x01	; 1
     764:	f1 f5       	brne	.+124    	; 0x7e2 <period_lcd_press+0xb6>
     766:	38 c0       	rjmp	.+112    	; 0x7d8 <period_lcd_press+0xac>
	{
		while((xLastWakeTime<=10000))
		{				
			LcdWrite_blink();
     768:	0e 94 8f 02 	call	0x51e	; 0x51e <LcdWrite_blink>
			vTaskDelayUntil( &xLastWakeTime, xPeriod_on );
     76c:	64 ef       	ldi	r22, 0xF4	; 244
     76e:	71 e0       	ldi	r23, 0x01	; 1
     770:	ce 01       	movw	r24, r28
     772:	01 96       	adiw	r24, 0x01	; 1
     774:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
			lcd_clrScreen();
     778:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrScreen>
			vTaskDelayUntil( &xLastWakeTime, xPeriod_off );
     77c:	6a ef       	ldi	r22, 0xFA	; 250
     77e:	70 e0       	ldi	r23, 0x00	; 0
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	0e 94 96 0a 	call	0x152c	; 0x152c <vTaskDelayUntil>
			if (GetKeyPressed() != NULL)
     788:	0e 94 38 03 	call	0x670	; 0x670 <GetKeyPressed>
     78c:	88 23       	and	r24, r24
     78e:	21 f1       	breq	.+72     	; 0x7d8 <period_lcd_press+0xac>
			{
				xSemaphoreGive(xSemaphore);
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	40 e0       	ldi	r20, 0x00	; 0
     794:	50 e0       	ldi	r21, 0x00	; 0
     796:	60 e0       	ldi	r22, 0x00	; 0
     798:	70 e0       	ldi	r23, 0x00	; 0
     79a:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     79e:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     7a2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <xQueueGenericSend>
				vTaskDelete(NULL);
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskDelete>
				xTaskCreate(Calculator,  NULL, 100, NULL,1, &Task_calc_id );
     7ae:	a1 2c       	mov	r10, r1
     7b0:	b1 2c       	mov	r11, r1
     7b2:	c1 2c       	mov	r12, r1
     7b4:	d1 2c       	mov	r13, r1
     7b6:	0f 2e       	mov	r0, r31
     7b8:	fc e5       	ldi	r31, 0x5C	; 92
     7ba:	ef 2e       	mov	r14, r31
     7bc:	f3 e0       	ldi	r31, 0x03	; 3
     7be:	ff 2e       	mov	r15, r31
     7c0:	f0 2d       	mov	r31, r0
     7c2:	01 e0       	ldi	r16, 0x01	; 1
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	44 e6       	ldi	r20, 0x64	; 100
     7ca:	50 e0       	ldi	r21, 0x00	; 0
     7cc:	60 e0       	ldi	r22, 0x00	; 0
     7ce:	70 e0       	ldi	r23, 0x00	; 0
     7d0:	8e e0       	ldi	r24, 0x0E	; 14
     7d2:	94 e0       	ldi	r25, 0x04	; 4
     7d4:	0e 94 bb 07 	call	0xf76	; 0xf76 <xTaskGenericCreate>
	const portTickType xPeriod_off = 250;
	const portTickType time = portMAX_DELAY;	
	xLastWakeTime = xTaskGetTickCount();
	if(xSemaphoreTake(xSemaphore,time)==pdTRUE)
	{
		while((xLastWakeTime<=10000))
     7d8:	89 81       	ldd	r24, Y+1	; 0x01
     7da:	9a 81       	ldd	r25, Y+2	; 0x02
     7dc:	81 31       	cpi	r24, 0x11	; 17
     7de:	97 42       	sbci	r25, 0x27	; 39
     7e0:	18 f2       	brcs	.-122    	; 0x768 <period_lcd_press+0x3c>
			}

			
		}
	}
	lcd_clrScreen();
     7e2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_clrScreen>
	xSemaphoreGive(xSemaphore);
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	40 e0       	ldi	r20, 0x00	; 0
     7ea:	50 e0       	ldi	r21, 0x00	; 0
     7ec:	60 e0       	ldi	r22, 0x00	; 0
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     7f4:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     7f8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <xQueueGenericSend>
	vTaskDelete(NULL);
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	0e 94 c9 08 	call	0x1192	; 0x1192 <vTaskDelete>
}
     804:	0f 90       	pop	r0
     806:	0f 90       	pop	r0
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	0f 91       	pop	r16
     80e:	ff 90       	pop	r15
     810:	ef 90       	pop	r14
     812:	df 90       	pop	r13
     814:	cf 90       	pop	r12
     816:	bf 90       	pop	r11
     818:	af 90       	pop	r10
     81a:	08 95       	ret

0000081c <Calculator>:
	xSemaphoreGive(xSemaphore);
	vTaskDelete(NULL);	
}

void Calculator(void *p)
{
     81c:	cf 93       	push	r28
	if(xSemaphoreTake(xSemaphore,portMAX_DELAY)==pdTRUE)
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	4f ef       	ldi	r20, 0xFF	; 255
     822:	5f ef       	ldi	r21, 0xFF	; 255
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <xSemaphore>
     82c:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <xSemaphore+0x1>
     830:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <xQueueGenericReceive>
     834:	81 30       	cpi	r24, 0x01	; 1
     836:	69 f4       	brne	.+26     	; 0x852 <Calculator+0x36>
	{
		unsigned char x= GetKeyPressed();
     838:	0e 94 38 03 	call	0x670	; 0x670 <GetKeyPressed>
     83c:	c8 2f       	mov	r28, r24
		lcd_gotoxy(0,0);
     83e:	60 e0       	ldi	r22, 0x00	; 0
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	80 e0       	ldi	r24, 0x00	; 0
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_gotoxy>
		lcd_displayChar(x);
     84a:	8c 2f       	mov	r24, r28
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	0e 94 ba 00 	call	0x174	; 0x174 <lcd_displayChar>
	}
}
     852:	cf 91       	pop	r28
     854:	08 95       	ret

00000856 <pxPortInitialiseStack>:
     856:	31 e1       	ldi	r19, 0x11	; 17
     858:	fc 01       	movw	r30, r24
     85a:	30 83       	st	Z, r19
     85c:	31 97       	sbiw	r30, 0x01	; 1
     85e:	22 e2       	ldi	r18, 0x22	; 34
     860:	20 83       	st	Z, r18
     862:	31 97       	sbiw	r30, 0x01	; 1
     864:	a3 e3       	ldi	r26, 0x33	; 51
     866:	a0 83       	st	Z, r26
     868:	31 97       	sbiw	r30, 0x01	; 1
     86a:	60 83       	st	Z, r22
     86c:	31 97       	sbiw	r30, 0x01	; 1
     86e:	70 83       	st	Z, r23
     870:	31 97       	sbiw	r30, 0x01	; 1
     872:	10 82       	st	Z, r1
     874:	31 97       	sbiw	r30, 0x01	; 1
     876:	60 e8       	ldi	r22, 0x80	; 128
     878:	60 83       	st	Z, r22
     87a:	31 97       	sbiw	r30, 0x01	; 1
     87c:	10 82       	st	Z, r1
     87e:	31 97       	sbiw	r30, 0x01	; 1
     880:	62 e0       	ldi	r22, 0x02	; 2
     882:	60 83       	st	Z, r22
     884:	31 97       	sbiw	r30, 0x01	; 1
     886:	63 e0       	ldi	r22, 0x03	; 3
     888:	60 83       	st	Z, r22
     88a:	31 97       	sbiw	r30, 0x01	; 1
     88c:	64 e0       	ldi	r22, 0x04	; 4
     88e:	60 83       	st	Z, r22
     890:	31 97       	sbiw	r30, 0x01	; 1
     892:	65 e0       	ldi	r22, 0x05	; 5
     894:	60 83       	st	Z, r22
     896:	31 97       	sbiw	r30, 0x01	; 1
     898:	66 e0       	ldi	r22, 0x06	; 6
     89a:	60 83       	st	Z, r22
     89c:	31 97       	sbiw	r30, 0x01	; 1
     89e:	67 e0       	ldi	r22, 0x07	; 7
     8a0:	60 83       	st	Z, r22
     8a2:	31 97       	sbiw	r30, 0x01	; 1
     8a4:	68 e0       	ldi	r22, 0x08	; 8
     8a6:	60 83       	st	Z, r22
     8a8:	31 97       	sbiw	r30, 0x01	; 1
     8aa:	69 e0       	ldi	r22, 0x09	; 9
     8ac:	60 83       	st	Z, r22
     8ae:	31 97       	sbiw	r30, 0x01	; 1
     8b0:	60 e1       	ldi	r22, 0x10	; 16
     8b2:	60 83       	st	Z, r22
     8b4:	31 97       	sbiw	r30, 0x01	; 1
     8b6:	30 83       	st	Z, r19
     8b8:	31 97       	sbiw	r30, 0x01	; 1
     8ba:	32 e1       	ldi	r19, 0x12	; 18
     8bc:	30 83       	st	Z, r19
     8be:	31 97       	sbiw	r30, 0x01	; 1
     8c0:	33 e1       	ldi	r19, 0x13	; 19
     8c2:	30 83       	st	Z, r19
     8c4:	31 97       	sbiw	r30, 0x01	; 1
     8c6:	34 e1       	ldi	r19, 0x14	; 20
     8c8:	30 83       	st	Z, r19
     8ca:	31 97       	sbiw	r30, 0x01	; 1
     8cc:	35 e1       	ldi	r19, 0x15	; 21
     8ce:	30 83       	st	Z, r19
     8d0:	31 97       	sbiw	r30, 0x01	; 1
     8d2:	36 e1       	ldi	r19, 0x16	; 22
     8d4:	30 83       	st	Z, r19
     8d6:	31 97       	sbiw	r30, 0x01	; 1
     8d8:	37 e1       	ldi	r19, 0x17	; 23
     8da:	30 83       	st	Z, r19
     8dc:	31 97       	sbiw	r30, 0x01	; 1
     8de:	38 e1       	ldi	r19, 0x18	; 24
     8e0:	30 83       	st	Z, r19
     8e2:	31 97       	sbiw	r30, 0x01	; 1
     8e4:	39 e1       	ldi	r19, 0x19	; 25
     8e6:	30 83       	st	Z, r19
     8e8:	31 97       	sbiw	r30, 0x01	; 1
     8ea:	30 e2       	ldi	r19, 0x20	; 32
     8ec:	30 83       	st	Z, r19
     8ee:	31 97       	sbiw	r30, 0x01	; 1
     8f0:	31 e2       	ldi	r19, 0x21	; 33
     8f2:	30 83       	st	Z, r19
     8f4:	31 97       	sbiw	r30, 0x01	; 1
     8f6:	20 83       	st	Z, r18
     8f8:	31 97       	sbiw	r30, 0x01	; 1
     8fa:	23 e2       	ldi	r18, 0x23	; 35
     8fc:	20 83       	st	Z, r18
     8fe:	31 97       	sbiw	r30, 0x01	; 1
     900:	40 83       	st	Z, r20
     902:	31 97       	sbiw	r30, 0x01	; 1
     904:	50 83       	st	Z, r21
     906:	31 97       	sbiw	r30, 0x01	; 1
     908:	26 e2       	ldi	r18, 0x26	; 38
     90a:	20 83       	st	Z, r18
     90c:	31 97       	sbiw	r30, 0x01	; 1
     90e:	27 e2       	ldi	r18, 0x27	; 39
     910:	20 83       	st	Z, r18
     912:	31 97       	sbiw	r30, 0x01	; 1
     914:	28 e2       	ldi	r18, 0x28	; 40
     916:	20 83       	st	Z, r18
     918:	31 97       	sbiw	r30, 0x01	; 1
     91a:	29 e2       	ldi	r18, 0x29	; 41
     91c:	20 83       	st	Z, r18
     91e:	31 97       	sbiw	r30, 0x01	; 1
     920:	20 e3       	ldi	r18, 0x30	; 48
     922:	20 83       	st	Z, r18
     924:	31 97       	sbiw	r30, 0x01	; 1
     926:	21 e3       	ldi	r18, 0x31	; 49
     928:	20 83       	st	Z, r18
     92a:	86 97       	sbiw	r24, 0x26	; 38
     92c:	08 95       	ret

0000092e <xPortStartScheduler>:
     92e:	1b bc       	out	0x2b, r1	; 43
     930:	8c e7       	ldi	r24, 0x7C	; 124
     932:	8a bd       	out	0x2a, r24	; 42
     934:	8b e0       	ldi	r24, 0x0B	; 11
     936:	8e bd       	out	0x2e, r24	; 46
     938:	89 b7       	in	r24, 0x39	; 57
     93a:	80 61       	ori	r24, 0x10	; 16
     93c:	89 bf       	out	0x39, r24	; 57
     93e:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <pxCurrentTCB>
     942:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     946:	cd 91       	ld	r28, X+
     948:	cd bf       	out	0x3d, r28	; 61
     94a:	dd 91       	ld	r29, X+
     94c:	de bf       	out	0x3e, r29	; 62
     94e:	ff 91       	pop	r31
     950:	ef 91       	pop	r30
     952:	df 91       	pop	r29
     954:	cf 91       	pop	r28
     956:	bf 91       	pop	r27
     958:	af 91       	pop	r26
     95a:	9f 91       	pop	r25
     95c:	8f 91       	pop	r24
     95e:	7f 91       	pop	r23
     960:	6f 91       	pop	r22
     962:	5f 91       	pop	r21
     964:	4f 91       	pop	r20
     966:	3f 91       	pop	r19
     968:	2f 91       	pop	r18
     96a:	1f 91       	pop	r17
     96c:	0f 91       	pop	r16
     96e:	ff 90       	pop	r15
     970:	ef 90       	pop	r14
     972:	df 90       	pop	r13
     974:	cf 90       	pop	r12
     976:	bf 90       	pop	r11
     978:	af 90       	pop	r10
     97a:	9f 90       	pop	r9
     97c:	8f 90       	pop	r8
     97e:	7f 90       	pop	r7
     980:	6f 90       	pop	r6
     982:	5f 90       	pop	r5
     984:	4f 90       	pop	r4
     986:	3f 90       	pop	r3
     988:	2f 90       	pop	r2
     98a:	1f 90       	pop	r1
     98c:	0f 90       	pop	r0
     98e:	0f be       	out	0x3f, r0	; 63
     990:	0f 90       	pop	r0
     992:	08 95       	ret
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	08 95       	ret

00000998 <vPortYield>:
     998:	0f 92       	push	r0
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	0f 92       	push	r0
     9a0:	1f 92       	push	r1
     9a2:	11 24       	eor	r1, r1
     9a4:	2f 92       	push	r2
     9a6:	3f 92       	push	r3
     9a8:	4f 92       	push	r4
     9aa:	5f 92       	push	r5
     9ac:	6f 92       	push	r6
     9ae:	7f 92       	push	r7
     9b0:	8f 92       	push	r8
     9b2:	9f 92       	push	r9
     9b4:	af 92       	push	r10
     9b6:	bf 92       	push	r11
     9b8:	cf 92       	push	r12
     9ba:	df 92       	push	r13
     9bc:	ef 92       	push	r14
     9be:	ff 92       	push	r15
     9c0:	0f 93       	push	r16
     9c2:	1f 93       	push	r17
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	4f 93       	push	r20
     9ca:	5f 93       	push	r21
     9cc:	6f 93       	push	r22
     9ce:	7f 93       	push	r23
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
     9d4:	af 93       	push	r26
     9d6:	bf 93       	push	r27
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	ef 93       	push	r30
     9de:	ff 93       	push	r31
     9e0:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <pxCurrentTCB>
     9e4:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     9e8:	0d b6       	in	r0, 0x3d	; 61
     9ea:	0d 92       	st	X+, r0
     9ec:	0e b6       	in	r0, 0x3e	; 62
     9ee:	0d 92       	st	X+, r0
     9f0:	0e 94 12 0b 	call	0x1624	; 0x1624 <vTaskSwitchContext>
     9f4:	a0 91 52 03 	lds	r26, 0x0352	; 0x800352 <pxCurrentTCB>
     9f8:	b0 91 53 03 	lds	r27, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     9fc:	cd 91       	ld	r28, X+
     9fe:	cd bf       	out	0x3d, r28	; 61
     a00:	dd 91       	ld	r29, X+
     a02:	de bf       	out	0x3e, r29	; 62
     a04:	ff 91       	pop	r31
     a06:	ef 91       	pop	r30
     a08:	df 91       	pop	r29
     a0a:	cf 91       	pop	r28
     a0c:	bf 91       	pop	r27
     a0e:	af 91       	pop	r26
     a10:	9f 91       	pop	r25
     a12:	8f 91       	pop	r24
     a14:	7f 91       	pop	r23
     a16:	6f 91       	pop	r22
     a18:	5f 91       	pop	r21
     a1a:	4f 91       	pop	r20
     a1c:	3f 91       	pop	r19
     a1e:	2f 91       	pop	r18
     a20:	1f 91       	pop	r17
     a22:	0f 91       	pop	r16
     a24:	ff 90       	pop	r15
     a26:	ef 90       	pop	r14
     a28:	df 90       	pop	r13
     a2a:	cf 90       	pop	r12
     a2c:	bf 90       	pop	r11
     a2e:	af 90       	pop	r10
     a30:	9f 90       	pop	r9
     a32:	8f 90       	pop	r8
     a34:	7f 90       	pop	r7
     a36:	6f 90       	pop	r6
     a38:	5f 90       	pop	r5
     a3a:	4f 90       	pop	r4
     a3c:	3f 90       	pop	r3
     a3e:	2f 90       	pop	r2
     a40:	1f 90       	pop	r1
     a42:	0f 90       	pop	r0
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	0f 90       	pop	r0
     a48:	08 95       	ret

00000a4a <__vector_7>:
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	2f 93       	push	r18
     a56:	3f 93       	push	r19
     a58:	4f 93       	push	r20
     a5a:	5f 93       	push	r21
     a5c:	6f 93       	push	r22
     a5e:	7f 93       	push	r23
     a60:	8f 93       	push	r24
     a62:	9f 93       	push	r25
     a64:	af 93       	push	r26
     a66:	bf 93       	push	r27
     a68:	ef 93       	push	r30
     a6a:	ff 93       	push	r31
     a6c:	0e 94 4d 09 	call	0x129a	; 0x129a <vTaskIncrementTick>
     a70:	ff 91       	pop	r31
     a72:	ef 91       	pop	r30
     a74:	bf 91       	pop	r27
     a76:	af 91       	pop	r26
     a78:	9f 91       	pop	r25
     a7a:	8f 91       	pop	r24
     a7c:	7f 91       	pop	r23
     a7e:	6f 91       	pop	r22
     a80:	5f 91       	pop	r21
     a82:	4f 91       	pop	r20
     a84:	3f 91       	pop	r19
     a86:	2f 91       	pop	r18
     a88:	0f 90       	pop	r0
     a8a:	0f be       	out	0x3f, r0	; 63
     a8c:	0f 90       	pop	r0
     a8e:	1f 90       	pop	r1
     a90:	18 95       	reti

00000a92 <prvCopyDataToQueue>:
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	ec 01       	movw	r28, r24
     a98:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a9a:	88 23       	and	r24, r24
     a9c:	a9 f1       	breq	.+106    	; 0xb08 <prvCopyDataToQueue+0x76>
     a9e:	41 11       	cpse	r20, r1
     aa0:	17 c0       	rjmp	.+46     	; 0xad0 <prvCopyDataToQueue+0x3e>
     aa2:	48 2f       	mov	r20, r24
     aa4:	50 e0       	ldi	r21, 0x00	; 0
     aa6:	8c 81       	ldd	r24, Y+4	; 0x04
     aa8:	9d 81       	ldd	r25, Y+5	; 0x05
     aaa:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <memcpy>
     aae:	2c 8d       	ldd	r18, Y+28	; 0x1c
     ab0:	8c 81       	ldd	r24, Y+4	; 0x04
     ab2:	9d 81       	ldd	r25, Y+5	; 0x05
     ab4:	82 0f       	add	r24, r18
     ab6:	91 1d       	adc	r25, r1
     ab8:	9d 83       	std	Y+5, r25	; 0x05
     aba:	8c 83       	std	Y+4, r24	; 0x04
     abc:	2a 81       	ldd	r18, Y+2	; 0x02
     abe:	3b 81       	ldd	r19, Y+3	; 0x03
     ac0:	82 17       	cp	r24, r18
     ac2:	93 07       	cpc	r25, r19
     ac4:	08 f1       	brcs	.+66     	; 0xb08 <prvCopyDataToQueue+0x76>
     ac6:	88 81       	ld	r24, Y
     ac8:	99 81       	ldd	r25, Y+1	; 0x01
     aca:	9d 83       	std	Y+5, r25	; 0x05
     acc:	8c 83       	std	Y+4, r24	; 0x04
     ace:	1c c0       	rjmp	.+56     	; 0xb08 <prvCopyDataToQueue+0x76>
     ad0:	48 2f       	mov	r20, r24
     ad2:	50 e0       	ldi	r21, 0x00	; 0
     ad4:	8e 81       	ldd	r24, Y+6	; 0x06
     ad6:	9f 81       	ldd	r25, Y+7	; 0x07
     ad8:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <memcpy>
     adc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	91 95       	neg	r25
     ae2:	81 95       	neg	r24
     ae4:	91 09       	sbc	r25, r1
     ae6:	2e 81       	ldd	r18, Y+6	; 0x06
     ae8:	3f 81       	ldd	r19, Y+7	; 0x07
     aea:	28 0f       	add	r18, r24
     aec:	39 1f       	adc	r19, r25
     aee:	3f 83       	std	Y+7, r19	; 0x07
     af0:	2e 83       	std	Y+6, r18	; 0x06
     af2:	48 81       	ld	r20, Y
     af4:	59 81       	ldd	r21, Y+1	; 0x01
     af6:	24 17       	cp	r18, r20
     af8:	35 07       	cpc	r19, r21
     afa:	30 f4       	brcc	.+12     	; 0xb08 <prvCopyDataToQueue+0x76>
     afc:	2a 81       	ldd	r18, Y+2	; 0x02
     afe:	3b 81       	ldd	r19, Y+3	; 0x03
     b00:	82 0f       	add	r24, r18
     b02:	93 1f       	adc	r25, r19
     b04:	9f 83       	std	Y+7, r25	; 0x07
     b06:	8e 83       	std	Y+6, r24	; 0x06
     b08:	8a 8d       	ldd	r24, Y+26	; 0x1a
     b0a:	8f 5f       	subi	r24, 0xFF	; 255
     b0c:	8a 8f       	std	Y+26, r24	; 0x1a
     b0e:	df 91       	pop	r29
     b10:	cf 91       	pop	r28
     b12:	08 95       	ret

00000b14 <prvCopyDataFromQueue>:
     b14:	fc 01       	movw	r30, r24
     b16:	80 81       	ld	r24, Z
     b18:	91 81       	ldd	r25, Z+1	; 0x01
     b1a:	00 97       	sbiw	r24, 0x00	; 0
     b1c:	a1 f0       	breq	.+40     	; 0xb46 <prvCopyDataFromQueue+0x32>
     b1e:	44 8d       	ldd	r20, Z+28	; 0x1c
     b20:	50 e0       	ldi	r21, 0x00	; 0
     b22:	26 81       	ldd	r18, Z+6	; 0x06
     b24:	37 81       	ldd	r19, Z+7	; 0x07
     b26:	24 0f       	add	r18, r20
     b28:	35 1f       	adc	r19, r21
     b2a:	37 83       	std	Z+7, r19	; 0x07
     b2c:	26 83       	std	Z+6, r18	; 0x06
     b2e:	a2 81       	ldd	r26, Z+2	; 0x02
     b30:	b3 81       	ldd	r27, Z+3	; 0x03
     b32:	2a 17       	cp	r18, r26
     b34:	3b 07       	cpc	r19, r27
     b36:	10 f0       	brcs	.+4      	; 0xb3c <prvCopyDataFromQueue+0x28>
     b38:	97 83       	std	Z+7, r25	; 0x07
     b3a:	86 83       	std	Z+6, r24	; 0x06
     b3c:	cb 01       	movw	r24, r22
     b3e:	66 81       	ldd	r22, Z+6	; 0x06
     b40:	77 81       	ldd	r23, Z+7	; 0x07
     b42:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <memcpy>
     b46:	08 95       	ret

00000b48 <prvUnlockQueue>:
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	ec 01       	movw	r28, r24
     b52:	0f b6       	in	r0, 0x3f	; 63
     b54:	f8 94       	cli
     b56:	0f 92       	push	r0
     b58:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b5a:	18 16       	cp	r1, r24
     b5c:	b4 f4       	brge	.+44     	; 0xb8a <prvUnlockQueue+0x42>
     b5e:	89 89       	ldd	r24, Y+17	; 0x11
     b60:	81 11       	cpse	r24, r1
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <prvUnlockQueue+0x26>
     b64:	12 c0       	rjmp	.+36     	; 0xb8a <prvUnlockQueue+0x42>
     b66:	89 89       	ldd	r24, Y+17	; 0x11
     b68:	81 11       	cpse	r24, r1
     b6a:	04 c0       	rjmp	.+8      	; 0xb74 <prvUnlockQueue+0x2c>
     b6c:	0e c0       	rjmp	.+28     	; 0xb8a <prvUnlockQueue+0x42>
     b6e:	8e 01       	movw	r16, r28
     b70:	0f 5e       	subi	r16, 0xEF	; 239
     b72:	1f 4f       	sbci	r17, 0xFF	; 255
     b74:	c8 01       	movw	r24, r16
     b76:	0e 94 aa 0b 	call	0x1754	; 0x1754 <xTaskRemoveFromEventList>
     b7a:	81 11       	cpse	r24, r1
     b7c:	0e 94 39 0c 	call	0x1872	; 0x1872 <vTaskMissedYield>
     b80:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b82:	81 50       	subi	r24, 0x01	; 1
     b84:	8e 8f       	std	Y+30, r24	; 0x1e
     b86:	18 16       	cp	r1, r24
     b88:	74 f3       	brlt	.-36     	; 0xb66 <prvUnlockQueue+0x1e>
     b8a:	8f ef       	ldi	r24, 0xFF	; 255
     b8c:	8e 8f       	std	Y+30, r24	; 0x1e
     b8e:	0f 90       	pop	r0
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	0f 92       	push	r0
     b98:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b9a:	18 16       	cp	r1, r24
     b9c:	b4 f4       	brge	.+44     	; 0xbca <prvUnlockQueue+0x82>
     b9e:	88 85       	ldd	r24, Y+8	; 0x08
     ba0:	81 11       	cpse	r24, r1
     ba2:	05 c0       	rjmp	.+10     	; 0xbae <prvUnlockQueue+0x66>
     ba4:	12 c0       	rjmp	.+36     	; 0xbca <prvUnlockQueue+0x82>
     ba6:	88 85       	ldd	r24, Y+8	; 0x08
     ba8:	81 11       	cpse	r24, r1
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <prvUnlockQueue+0x6c>
     bac:	0e c0       	rjmp	.+28     	; 0xbca <prvUnlockQueue+0x82>
     bae:	8e 01       	movw	r16, r28
     bb0:	08 5f       	subi	r16, 0xF8	; 248
     bb2:	1f 4f       	sbci	r17, 0xFF	; 255
     bb4:	c8 01       	movw	r24, r16
     bb6:	0e 94 aa 0b 	call	0x1754	; 0x1754 <xTaskRemoveFromEventList>
     bba:	81 11       	cpse	r24, r1
     bbc:	0e 94 39 0c 	call	0x1872	; 0x1872 <vTaskMissedYield>
     bc0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bc2:	81 50       	subi	r24, 0x01	; 1
     bc4:	8d 8f       	std	Y+29, r24	; 0x1d
     bc6:	18 16       	cp	r1, r24
     bc8:	74 f3       	brlt	.-36     	; 0xba6 <prvUnlockQueue+0x5e>
     bca:	8f ef       	ldi	r24, 0xFF	; 255
     bcc:	8d 8f       	std	Y+29, r24	; 0x1d
     bce:	0f 90       	pop	r0
     bd0:	0f be       	out	0x3f, r0	; 63
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	1f 91       	pop	r17
     bd8:	0f 91       	pop	r16
     bda:	08 95       	ret

00000bdc <xQueueCreate>:
     bdc:	cf 92       	push	r12
     bde:	df 92       	push	r13
     be0:	ef 92       	push	r14
     be2:	ff 92       	push	r15
     be4:	0f 93       	push	r16
     be6:	1f 93       	push	r17
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	88 23       	and	r24, r24
     bee:	d1 f1       	breq	.+116    	; 0xc64 <xQueueCreate+0x88>
     bf0:	e6 2e       	mov	r14, r22
     bf2:	f8 2e       	mov	r15, r24
     bf4:	8f e1       	ldi	r24, 0x1F	; 31
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	0e 94 59 00 	call	0xb2	; 0xb2 <pvPortMalloc>
     bfc:	ec 01       	movw	r28, r24
     bfe:	89 2b       	or	r24, r25
     c00:	99 f1       	breq	.+102    	; 0xc68 <xQueueCreate+0x8c>
     c02:	ce 2c       	mov	r12, r14
     c04:	d1 2c       	mov	r13, r1
     c06:	fc 9c       	mul	r15, r12
     c08:	80 01       	movw	r16, r0
     c0a:	fd 9c       	mul	r15, r13
     c0c:	10 0d       	add	r17, r0
     c0e:	11 24       	eor	r1, r1
     c10:	c8 01       	movw	r24, r16
     c12:	01 96       	adiw	r24, 0x01	; 1
     c14:	0e 94 59 00 	call	0xb2	; 0xb2 <pvPortMalloc>
     c18:	99 83       	std	Y+1, r25	; 0x01
     c1a:	88 83       	st	Y, r24
     c1c:	00 97       	sbiw	r24, 0x00	; 0
     c1e:	e1 f0       	breq	.+56     	; 0xc58 <xQueueCreate+0x7c>
     c20:	9c 01       	movw	r18, r24
     c22:	20 0f       	add	r18, r16
     c24:	31 1f       	adc	r19, r17
     c26:	3b 83       	std	Y+3, r19	; 0x03
     c28:	2a 83       	std	Y+2, r18	; 0x02
     c2a:	1a 8e       	std	Y+26, r1	; 0x1a
     c2c:	9d 83       	std	Y+5, r25	; 0x05
     c2e:	8c 83       	std	Y+4, r24	; 0x04
     c30:	0c 19       	sub	r16, r12
     c32:	1d 09       	sbc	r17, r13
     c34:	08 0f       	add	r16, r24
     c36:	19 1f       	adc	r17, r25
     c38:	1f 83       	std	Y+7, r17	; 0x07
     c3a:	0e 83       	std	Y+6, r16	; 0x06
     c3c:	fb 8e       	std	Y+27, r15	; 0x1b
     c3e:	ec 8e       	std	Y+28, r14	; 0x1c
     c40:	8f ef       	ldi	r24, 0xFF	; 255
     c42:	8d 8f       	std	Y+29, r24	; 0x1d
     c44:	8e 8f       	std	Y+30, r24	; 0x1e
     c46:	ce 01       	movw	r24, r28
     c48:	08 96       	adiw	r24, 0x08	; 8
     c4a:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
     c4e:	ce 01       	movw	r24, r28
     c50:	41 96       	adiw	r24, 0x11	; 17
     c52:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
     c56:	08 c0       	rjmp	.+16     	; 0xc68 <xQueueCreate+0x8c>
     c58:	ce 01       	movw	r24, r28
     c5a:	0e 94 7f 00 	call	0xfe	; 0xfe <vPortFree>
     c5e:	c0 e0       	ldi	r28, 0x00	; 0
     c60:	d0 e0       	ldi	r29, 0x00	; 0
     c62:	02 c0       	rjmp	.+4      	; 0xc68 <xQueueCreate+0x8c>
     c64:	c0 e0       	ldi	r28, 0x00	; 0
     c66:	d0 e0       	ldi	r29, 0x00	; 0
     c68:	ce 01       	movw	r24, r28
     c6a:	df 91       	pop	r29
     c6c:	cf 91       	pop	r28
     c6e:	1f 91       	pop	r17
     c70:	0f 91       	pop	r16
     c72:	ff 90       	pop	r15
     c74:	ef 90       	pop	r14
     c76:	df 90       	pop	r13
     c78:	cf 90       	pop	r12
     c7a:	08 95       	ret

00000c7c <xQueueGenericSend>:
     c7c:	9f 92       	push	r9
     c7e:	af 92       	push	r10
     c80:	bf 92       	push	r11
     c82:	cf 92       	push	r12
     c84:	df 92       	push	r13
     c86:	ef 92       	push	r14
     c88:	ff 92       	push	r15
     c8a:	0f 93       	push	r16
     c8c:	1f 93       	push	r17
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
     c92:	00 d0       	rcall	.+0      	; 0xc94 <xQueueGenericSend+0x18>
     c94:	00 d0       	rcall	.+0      	; 0xc96 <xQueueGenericSend+0x1a>
     c96:	1f 92       	push	r1
     c98:	cd b7       	in	r28, 0x3d	; 61
     c9a:	de b7       	in	r29, 0x3e	; 62
     c9c:	8c 01       	movw	r16, r24
     c9e:	6b 01       	movw	r12, r22
     ca0:	5d 83       	std	Y+5, r21	; 0x05
     ca2:	4c 83       	std	Y+4, r20	; 0x04
     ca4:	92 2e       	mov	r9, r18
     ca6:	b1 2c       	mov	r11, r1
     ca8:	aa 24       	eor	r10, r10
     caa:	a3 94       	inc	r10
     cac:	7c 01       	movw	r14, r24
     cae:	88 e0       	ldi	r24, 0x08	; 8
     cb0:	e8 0e       	add	r14, r24
     cb2:	f1 1c       	adc	r15, r1
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	0f 92       	push	r0
     cba:	f8 01       	movw	r30, r16
     cbc:	92 8d       	ldd	r25, Z+26	; 0x1a
     cbe:	83 8d       	ldd	r24, Z+27	; 0x1b
     cc0:	98 17       	cp	r25, r24
     cc2:	a8 f4       	brcc	.+42     	; 0xcee <xQueueGenericSend+0x72>
     cc4:	49 2d       	mov	r20, r9
     cc6:	b6 01       	movw	r22, r12
     cc8:	c8 01       	movw	r24, r16
     cca:	0e 94 49 05 	call	0xa92	; 0xa92 <prvCopyDataToQueue>
     cce:	f8 01       	movw	r30, r16
     cd0:	81 89       	ldd	r24, Z+17	; 0x11
     cd2:	88 23       	and	r24, r24
     cd4:	41 f0       	breq	.+16     	; 0xce6 <xQueueGenericSend+0x6a>
     cd6:	c8 01       	movw	r24, r16
     cd8:	41 96       	adiw	r24, 0x11	; 17
     cda:	0e 94 aa 0b 	call	0x1754	; 0x1754 <xTaskRemoveFromEventList>
     cde:	81 30       	cpi	r24, 0x01	; 1
     ce0:	11 f4       	brne	.+4      	; 0xce6 <xQueueGenericSend+0x6a>
     ce2:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
     ce6:	0f 90       	pop	r0
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	50 c0       	rjmp	.+160    	; 0xd8e <xQueueGenericSend+0x112>
     cee:	8c 81       	ldd	r24, Y+4	; 0x04
     cf0:	9d 81       	ldd	r25, Y+5	; 0x05
     cf2:	89 2b       	or	r24, r25
     cf4:	21 f4       	brne	.+8      	; 0xcfe <xQueueGenericSend+0x82>
     cf6:	0f 90       	pop	r0
     cf8:	0f be       	out	0x3f, r0	; 63
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	48 c0       	rjmp	.+144    	; 0xd8e <xQueueGenericSend+0x112>
     cfe:	b1 10       	cpse	r11, r1
     d00:	05 c0       	rjmp	.+10     	; 0xd0c <xQueueGenericSend+0x90>
     d02:	ce 01       	movw	r24, r28
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	0e 94 ef 0b 	call	0x17de	; 0x17de <vTaskSetTimeOutState>
     d0a:	ba 2c       	mov	r11, r10
     d0c:	0f 90       	pop	r0
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	0e 94 3d 09 	call	0x127a	; 0x127a <vTaskSuspendAll>
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	f8 94       	cli
     d18:	0f 92       	push	r0
     d1a:	f8 01       	movw	r30, r16
     d1c:	85 8d       	ldd	r24, Z+29	; 0x1d
     d1e:	8f 3f       	cpi	r24, 0xFF	; 255
     d20:	09 f4       	brne	.+2      	; 0xd24 <xQueueGenericSend+0xa8>
     d22:	15 8e       	std	Z+29, r1	; 0x1d
     d24:	f8 01       	movw	r30, r16
     d26:	86 8d       	ldd	r24, Z+30	; 0x1e
     d28:	8f 3f       	cpi	r24, 0xFF	; 255
     d2a:	09 f4       	brne	.+2      	; 0xd2e <xQueueGenericSend+0xb2>
     d2c:	16 8e       	std	Z+30, r1	; 0x1e
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	be 01       	movw	r22, r28
     d34:	6c 5f       	subi	r22, 0xFC	; 252
     d36:	7f 4f       	sbci	r23, 0xFF	; 255
     d38:	ce 01       	movw	r24, r28
     d3a:	01 96       	adiw	r24, 0x01	; 1
     d3c:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <xTaskCheckForTimeOut>
     d40:	81 11       	cpse	r24, r1
     d42:	1f c0       	rjmp	.+62     	; 0xd82 <xQueueGenericSend+0x106>
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	0f 92       	push	r0
     d4a:	f8 01       	movw	r30, r16
     d4c:	92 8d       	ldd	r25, Z+26	; 0x1a
     d4e:	0f 90       	pop	r0
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	83 8d       	ldd	r24, Z+27	; 0x1b
     d54:	98 13       	cpse	r25, r24
     d56:	0f c0       	rjmp	.+30     	; 0xd76 <xQueueGenericSend+0xfa>
     d58:	6c 81       	ldd	r22, Y+4	; 0x04
     d5a:	7d 81       	ldd	r23, Y+5	; 0x05
     d5c:	c7 01       	movw	r24, r14
     d5e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <vTaskPlaceOnEventList>
     d62:	c8 01       	movw	r24, r16
     d64:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     d68:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     d6c:	81 11       	cpse	r24, r1
     d6e:	a2 cf       	rjmp	.-188    	; 0xcb4 <xQueueGenericSend+0x38>
     d70:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
     d74:	9f cf       	rjmp	.-194    	; 0xcb4 <xQueueGenericSend+0x38>
     d76:	c8 01       	movw	r24, r16
     d78:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     d7c:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     d80:	99 cf       	rjmp	.-206    	; 0xcb4 <xQueueGenericSend+0x38>
     d82:	c8 01       	movw	r24, r16
     d84:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     d88:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
     d92:	0f 90       	pop	r0
     d94:	0f 90       	pop	r0
     d96:	0f 90       	pop	r0
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	1f 91       	pop	r17
     d9e:	0f 91       	pop	r16
     da0:	ff 90       	pop	r15
     da2:	ef 90       	pop	r14
     da4:	df 90       	pop	r13
     da6:	cf 90       	pop	r12
     da8:	bf 90       	pop	r11
     daa:	af 90       	pop	r10
     dac:	9f 90       	pop	r9
     dae:	08 95       	ret

00000db0 <xQueueGenericReceive>:
     db0:	9f 92       	push	r9
     db2:	af 92       	push	r10
     db4:	bf 92       	push	r11
     db6:	cf 92       	push	r12
     db8:	df 92       	push	r13
     dba:	ef 92       	push	r14
     dbc:	ff 92       	push	r15
     dbe:	0f 93       	push	r16
     dc0:	1f 93       	push	r17
     dc2:	cf 93       	push	r28
     dc4:	df 93       	push	r29
     dc6:	00 d0       	rcall	.+0      	; 0xdc8 <xQueueGenericReceive+0x18>
     dc8:	00 d0       	rcall	.+0      	; 0xdca <xQueueGenericReceive+0x1a>
     dca:	1f 92       	push	r1
     dcc:	cd b7       	in	r28, 0x3d	; 61
     dce:	de b7       	in	r29, 0x3e	; 62
     dd0:	8c 01       	movw	r16, r24
     dd2:	6b 01       	movw	r12, r22
     dd4:	5d 83       	std	Y+5, r21	; 0x05
     dd6:	4c 83       	std	Y+4, r20	; 0x04
     dd8:	92 2e       	mov	r9, r18
     dda:	b1 2c       	mov	r11, r1
     ddc:	aa 24       	eor	r10, r10
     dde:	a3 94       	inc	r10
     de0:	7c 01       	movw	r14, r24
     de2:	81 e1       	ldi	r24, 0x11	; 17
     de4:	e8 0e       	add	r14, r24
     de6:	f1 1c       	adc	r15, r1
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	f8 94       	cli
     dec:	0f 92       	push	r0
     dee:	f8 01       	movw	r30, r16
     df0:	82 8d       	ldd	r24, Z+26	; 0x1a
     df2:	88 23       	and	r24, r24
     df4:	49 f1       	breq	.+82     	; 0xe48 <xQueueGenericReceive+0x98>
     df6:	e6 80       	ldd	r14, Z+6	; 0x06
     df8:	f7 80       	ldd	r15, Z+7	; 0x07
     dfa:	b6 01       	movw	r22, r12
     dfc:	c8 01       	movw	r24, r16
     dfe:	0e 94 8a 05 	call	0xb14	; 0xb14 <prvCopyDataFromQueue>
     e02:	91 10       	cpse	r9, r1
     e04:	10 c0       	rjmp	.+32     	; 0xe26 <xQueueGenericReceive+0x76>
     e06:	f8 01       	movw	r30, r16
     e08:	82 8d       	ldd	r24, Z+26	; 0x1a
     e0a:	81 50       	subi	r24, 0x01	; 1
     e0c:	82 8f       	std	Z+26, r24	; 0x1a
     e0e:	80 85       	ldd	r24, Z+8	; 0x08
     e10:	88 23       	and	r24, r24
     e12:	b1 f0       	breq	.+44     	; 0xe40 <xQueueGenericReceive+0x90>
     e14:	c8 01       	movw	r24, r16
     e16:	08 96       	adiw	r24, 0x08	; 8
     e18:	0e 94 aa 0b 	call	0x1754	; 0x1754 <xTaskRemoveFromEventList>
     e1c:	81 30       	cpi	r24, 0x01	; 1
     e1e:	81 f4       	brne	.+32     	; 0xe40 <xQueueGenericReceive+0x90>
     e20:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
     e24:	0d c0       	rjmp	.+26     	; 0xe40 <xQueueGenericReceive+0x90>
     e26:	f8 01       	movw	r30, r16
     e28:	f7 82       	std	Z+7, r15	; 0x07
     e2a:	e6 82       	std	Z+6, r14	; 0x06
     e2c:	81 89       	ldd	r24, Z+17	; 0x11
     e2e:	88 23       	and	r24, r24
     e30:	39 f0       	breq	.+14     	; 0xe40 <xQueueGenericReceive+0x90>
     e32:	c8 01       	movw	r24, r16
     e34:	41 96       	adiw	r24, 0x11	; 17
     e36:	0e 94 aa 0b 	call	0x1754	; 0x1754 <xTaskRemoveFromEventList>
     e3a:	81 11       	cpse	r24, r1
     e3c:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
     e40:	0f 90       	pop	r0
     e42:	0f be       	out	0x3f, r0	; 63
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	4f c0       	rjmp	.+158    	; 0xee6 <xQueueGenericReceive+0x136>
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	9d 81       	ldd	r25, Y+5	; 0x05
     e4c:	89 2b       	or	r24, r25
     e4e:	21 f4       	brne	.+8      	; 0xe58 <xQueueGenericReceive+0xa8>
     e50:	0f 90       	pop	r0
     e52:	0f be       	out	0x3f, r0	; 63
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	47 c0       	rjmp	.+142    	; 0xee6 <xQueueGenericReceive+0x136>
     e58:	b1 10       	cpse	r11, r1
     e5a:	05 c0       	rjmp	.+10     	; 0xe66 <xQueueGenericReceive+0xb6>
     e5c:	ce 01       	movw	r24, r28
     e5e:	01 96       	adiw	r24, 0x01	; 1
     e60:	0e 94 ef 0b 	call	0x17de	; 0x17de <vTaskSetTimeOutState>
     e64:	ba 2c       	mov	r11, r10
     e66:	0f 90       	pop	r0
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	0e 94 3d 09 	call	0x127a	; 0x127a <vTaskSuspendAll>
     e6e:	0f b6       	in	r0, 0x3f	; 63
     e70:	f8 94       	cli
     e72:	0f 92       	push	r0
     e74:	f8 01       	movw	r30, r16
     e76:	85 8d       	ldd	r24, Z+29	; 0x1d
     e78:	8f 3f       	cpi	r24, 0xFF	; 255
     e7a:	09 f4       	brne	.+2      	; 0xe7e <xQueueGenericReceive+0xce>
     e7c:	15 8e       	std	Z+29, r1	; 0x1d
     e7e:	f8 01       	movw	r30, r16
     e80:	86 8d       	ldd	r24, Z+30	; 0x1e
     e82:	8f 3f       	cpi	r24, 0xFF	; 255
     e84:	09 f4       	brne	.+2      	; 0xe88 <xQueueGenericReceive+0xd8>
     e86:	16 8e       	std	Z+30, r1	; 0x1e
     e88:	0f 90       	pop	r0
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	be 01       	movw	r22, r28
     e8e:	6c 5f       	subi	r22, 0xFC	; 252
     e90:	7f 4f       	sbci	r23, 0xFF	; 255
     e92:	ce 01       	movw	r24, r28
     e94:	01 96       	adiw	r24, 0x01	; 1
     e96:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <xTaskCheckForTimeOut>
     e9a:	81 11       	cpse	r24, r1
     e9c:	1e c0       	rjmp	.+60     	; 0xeda <xQueueGenericReceive+0x12a>
     e9e:	0f b6       	in	r0, 0x3f	; 63
     ea0:	f8 94       	cli
     ea2:	0f 92       	push	r0
     ea4:	f8 01       	movw	r30, r16
     ea6:	82 8d       	ldd	r24, Z+26	; 0x1a
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	81 11       	cpse	r24, r1
     eae:	0f c0       	rjmp	.+30     	; 0xece <xQueueGenericReceive+0x11e>
     eb0:	6c 81       	ldd	r22, Y+4	; 0x04
     eb2:	7d 81       	ldd	r23, Y+5	; 0x05
     eb4:	c7 01       	movw	r24, r14
     eb6:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <vTaskPlaceOnEventList>
     eba:	c8 01       	movw	r24, r16
     ebc:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ec0:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     ec4:	81 11       	cpse	r24, r1
     ec6:	90 cf       	rjmp	.-224    	; 0xde8 <xQueueGenericReceive+0x38>
     ec8:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
     ecc:	8d cf       	rjmp	.-230    	; 0xde8 <xQueueGenericReceive+0x38>
     ece:	c8 01       	movw	r24, r16
     ed0:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ed4:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     ed8:	87 cf       	rjmp	.-242    	; 0xde8 <xQueueGenericReceive+0x38>
     eda:	c8 01       	movw	r24, r16
     edc:	0e 94 a4 05 	call	0xb48	; 0xb48 <prvUnlockQueue>
     ee0:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
     ee4:	80 e0       	ldi	r24, 0x00	; 0
     ee6:	0f 90       	pop	r0
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	0f 90       	pop	r0
     eee:	0f 90       	pop	r0
     ef0:	df 91       	pop	r29
     ef2:	cf 91       	pop	r28
     ef4:	1f 91       	pop	r17
     ef6:	0f 91       	pop	r16
     ef8:	ff 90       	pop	r15
     efa:	ef 90       	pop	r14
     efc:	df 90       	pop	r13
     efe:	cf 90       	pop	r12
     f00:	bf 90       	pop	r11
     f02:	af 90       	pop	r10
     f04:	9f 90       	pop	r9
     f06:	08 95       	ret

00000f08 <prvAddCurrentTaskToDelayedList>:
     f08:	cf 93       	push	r28
     f0a:	df 93       	push	r29
     f0c:	ec 01       	movw	r28, r24
     f0e:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <pxCurrentTCB>
     f12:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     f16:	93 83       	std	Z+3, r25	; 0x03
     f18:	82 83       	std	Z+2, r24	; 0x02
     f1a:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
     f1e:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
     f22:	c8 17       	cp	r28, r24
     f24:	d9 07       	cpc	r29, r25
     f26:	68 f4       	brcc	.+26     	; 0xf42 <prvAddCurrentTaskToDelayedList+0x3a>
     f28:	60 91 52 03 	lds	r22, 0x0352	; 0x800352 <pxCurrentTCB>
     f2c:	70 91 53 03 	lds	r23, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     f30:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <pxOverflowDelayedTaskList>
     f34:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <pxOverflowDelayedTaskList+0x1>
     f38:	6e 5f       	subi	r22, 0xFE	; 254
     f3a:	7f 4f       	sbci	r23, 0xFF	; 255
     f3c:	0e 94 45 01 	call	0x28a	; 0x28a <vListInsert>
     f40:	17 c0       	rjmp	.+46     	; 0xf70 <prvAddCurrentTaskToDelayedList+0x68>
     f42:	60 91 52 03 	lds	r22, 0x0352	; 0x800352 <pxCurrentTCB>
     f46:	70 91 53 03 	lds	r23, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
     f4a:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <pxDelayedTaskList>
     f4e:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
     f52:	6e 5f       	subi	r22, 0xFE	; 254
     f54:	7f 4f       	sbci	r23, 0xFF	; 255
     f56:	0e 94 45 01 	call	0x28a	; 0x28a <vListInsert>
     f5a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     f5e:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     f62:	c8 17       	cp	r28, r24
     f64:	d9 07       	cpc	r29, r25
     f66:	20 f4       	brcc	.+8      	; 0xf70 <prvAddCurrentTaskToDelayedList+0x68>
     f68:	d0 93 61 00 	sts	0x0061, r29	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     f6c:	c0 93 60 00 	sts	0x0060, r28	; 0x800060 <__DATA_REGION_ORIGIN__>
     f70:	df 91       	pop	r29
     f72:	cf 91       	pop	r28
     f74:	08 95       	ret

00000f76 <xTaskGenericCreate>:
     f76:	4f 92       	push	r4
     f78:	5f 92       	push	r5
     f7a:	6f 92       	push	r6
     f7c:	7f 92       	push	r7
     f7e:	8f 92       	push	r8
     f80:	9f 92       	push	r9
     f82:	af 92       	push	r10
     f84:	bf 92       	push	r11
     f86:	cf 92       	push	r12
     f88:	df 92       	push	r13
     f8a:	ef 92       	push	r14
     f8c:	ff 92       	push	r15
     f8e:	0f 93       	push	r16
     f90:	1f 93       	push	r17
     f92:	cf 93       	push	r28
     f94:	df 93       	push	r29
     f96:	5c 01       	movw	r10, r24
     f98:	4b 01       	movw	r8, r22
     f9a:	ea 01       	movw	r28, r20
     f9c:	29 01       	movw	r4, r18
     f9e:	81 e2       	ldi	r24, 0x21	; 33
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 59 00 	call	0xb2	; 0xb2 <pvPortMalloc>
     fa6:	3c 01       	movw	r6, r24
     fa8:	00 97       	sbiw	r24, 0x00	; 0
     faa:	09 f4       	brne	.+2      	; 0xfae <xTaskGenericCreate+0x38>
     fac:	e0 c0       	rjmp	.+448    	; 0x116e <xTaskGenericCreate+0x1f8>
     fae:	c1 14       	cp	r12, r1
     fb0:	d1 04       	cpc	r13, r1
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <xTaskGenericCreate+0x40>
     fb4:	d7 c0       	rjmp	.+430    	; 0x1164 <xTaskGenericCreate+0x1ee>
     fb6:	ce 01       	movw	r24, r28
     fb8:	0e 94 59 00 	call	0xb2	; 0xb2 <pvPortMalloc>
     fbc:	f3 01       	movw	r30, r6
     fbe:	90 8f       	std	Z+24, r25	; 0x18
     fc0:	87 8b       	std	Z+23, r24	; 0x17
     fc2:	00 97       	sbiw	r24, 0x00	; 0
     fc4:	21 f4       	brne	.+8      	; 0xfce <xTaskGenericCreate+0x58>
     fc6:	c3 01       	movw	r24, r6
     fc8:	0e 94 7f 00 	call	0xfe	; 0xfe <vPortFree>
     fcc:	d0 c0       	rjmp	.+416    	; 0x116e <xTaskGenericCreate+0x1f8>
     fce:	ae 01       	movw	r20, r28
     fd0:	65 ea       	ldi	r22, 0xA5	; 165
     fd2:	70 e0       	ldi	r23, 0x00	; 0
     fd4:	0e 94 76 0d 	call	0x1aec	; 0x1aec <memset>
     fd8:	21 97       	sbiw	r28, 0x01	; 1
     fda:	f3 01       	movw	r30, r6
     fdc:	87 89       	ldd	r24, Z+23	; 0x17
     fde:	90 8d       	ldd	r25, Z+24	; 0x18
     fe0:	c8 0f       	add	r28, r24
     fe2:	d9 1f       	adc	r29, r25
     fe4:	48 e0       	ldi	r20, 0x08	; 8
     fe6:	50 e0       	ldi	r21, 0x00	; 0
     fe8:	b4 01       	movw	r22, r8
     fea:	c3 01       	movw	r24, r6
     fec:	49 96       	adiw	r24, 0x19	; 25
     fee:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <strncpy>
     ff2:	f3 01       	movw	r30, r6
     ff4:	10 a2       	std	Z+32, r1	; 0x20
     ff6:	10 2f       	mov	r17, r16
     ff8:	05 30       	cpi	r16, 0x05	; 5
     ffa:	08 f0       	brcs	.+2      	; 0xffe <xTaskGenericCreate+0x88>
     ffc:	14 e0       	ldi	r17, 0x04	; 4
     ffe:	f3 01       	movw	r30, r6
    1000:	16 8b       	std	Z+22, r17	; 0x16
    1002:	63 01       	movw	r12, r6
    1004:	f2 e0       	ldi	r31, 0x02	; 2
    1006:	cf 0e       	add	r12, r31
    1008:	d1 1c       	adc	r13, r1
    100a:	c6 01       	movw	r24, r12
    100c:	0e 94 1a 01 	call	0x234	; 0x234 <vListInitialiseItem>
    1010:	c3 01       	movw	r24, r6
    1012:	0c 96       	adiw	r24, 0x0c	; 12
    1014:	0e 94 1a 01 	call	0x234	; 0x234 <vListInitialiseItem>
    1018:	f3 01       	movw	r30, r6
    101a:	71 86       	std	Z+9, r7	; 0x09
    101c:	60 86       	std	Z+8, r6	; 0x08
    101e:	85 e0       	ldi	r24, 0x05	; 5
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	81 1b       	sub	r24, r17
    1024:	91 09       	sbc	r25, r1
    1026:	95 87       	std	Z+13, r25	; 0x0d
    1028:	84 87       	std	Z+12, r24	; 0x0c
    102a:	73 8a       	std	Z+19, r7	; 0x13
    102c:	62 8a       	std	Z+18, r6	; 0x12
    102e:	a2 01       	movw	r20, r4
    1030:	b5 01       	movw	r22, r10
    1032:	ce 01       	movw	r24, r28
    1034:	0e 94 2b 04 	call	0x856	; 0x856 <pxPortInitialiseStack>
    1038:	f3 01       	movw	r30, r6
    103a:	91 83       	std	Z+1, r25	; 0x01
    103c:	80 83       	st	Z, r24
    103e:	e1 14       	cp	r14, r1
    1040:	f1 04       	cpc	r15, r1
    1042:	19 f0       	breq	.+6      	; 0x104a <xTaskGenericCreate+0xd4>
    1044:	f7 01       	movw	r30, r14
    1046:	71 82       	std	Z+1, r7	; 0x01
    1048:	60 82       	st	Z, r6
    104a:	0f b6       	in	r0, 0x3f	; 63
    104c:	f8 94       	cli
    104e:	0f 92       	push	r0
    1050:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <uxCurrentNumberOfTasks>
    1054:	8f 5f       	subi	r24, 0xFF	; 255
    1056:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <uxCurrentNumberOfTasks>
    105a:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <pxCurrentTCB>
    105e:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    1062:	89 2b       	or	r24, r25
    1064:	c9 f5       	brne	.+114    	; 0x10d8 <xTaskGenericCreate+0x162>
    1066:	70 92 53 03 	sts	0x0353, r7	; 0x800353 <pxCurrentTCB+0x1>
    106a:	60 92 52 03 	sts	0x0352, r6	; 0x800352 <pxCurrentTCB>
    106e:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <uxCurrentNumberOfTasks>
    1072:	81 30       	cpi	r24, 0x01	; 1
    1074:	09 f0       	breq	.+2      	; 0x1078 <xTaskGenericCreate+0x102>
    1076:	3f c0       	rjmp	.+126    	; 0x10f6 <xTaskGenericCreate+0x180>
    1078:	c5 e2       	ldi	r28, 0x25	; 37
    107a:	d3 e0       	ldi	r29, 0x03	; 3
    107c:	0f 2e       	mov	r0, r31
    107e:	f2 e5       	ldi	r31, 0x52	; 82
    1080:	ef 2e       	mov	r14, r31
    1082:	f3 e0       	ldi	r31, 0x03	; 3
    1084:	ff 2e       	mov	r15, r31
    1086:	f0 2d       	mov	r31, r0
    1088:	ce 01       	movw	r24, r28
    108a:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    108e:	29 96       	adiw	r28, 0x09	; 9
    1090:	ce 15       	cp	r28, r14
    1092:	df 05       	cpc	r29, r15
    1094:	c9 f7       	brne	.-14     	; 0x1088 <xTaskGenericCreate+0x112>
    1096:	8c e1       	ldi	r24, 0x1C	; 28
    1098:	93 e0       	ldi	r25, 0x03	; 3
    109a:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    109e:	83 e1       	ldi	r24, 0x13	; 19
    10a0:	93 e0       	ldi	r25, 0x03	; 3
    10a2:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    10a6:	86 e0       	ldi	r24, 0x06	; 6
    10a8:	93 e0       	ldi	r25, 0x03	; 3
    10aa:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    10ae:	8d ef       	ldi	r24, 0xFD	; 253
    10b0:	92 e0       	ldi	r25, 0x02	; 2
    10b2:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    10b6:	83 ef       	ldi	r24, 0xF3	; 243
    10b8:	92 e0       	ldi	r25, 0x02	; 2
    10ba:	0e 94 0c 01 	call	0x218	; 0x218 <vListInitialise>
    10be:	8c e1       	ldi	r24, 0x1C	; 28
    10c0:	93 e0       	ldi	r25, 0x03	; 3
    10c2:	90 93 12 03 	sts	0x0312, r25	; 0x800312 <pxDelayedTaskList+0x1>
    10c6:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <pxDelayedTaskList>
    10ca:	83 e1       	ldi	r24, 0x13	; 19
    10cc:	93 e0       	ldi	r25, 0x03	; 3
    10ce:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <pxOverflowDelayedTaskList+0x1>
    10d2:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <pxOverflowDelayedTaskList>
    10d6:	0f c0       	rjmp	.+30     	; 0x10f6 <xTaskGenericCreate+0x180>
    10d8:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <xSchedulerRunning>
    10dc:	81 11       	cpse	r24, r1
    10de:	0b c0       	rjmp	.+22     	; 0x10f6 <xTaskGenericCreate+0x180>
    10e0:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <pxCurrentTCB>
    10e4:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    10e8:	86 89       	ldd	r24, Z+22	; 0x16
    10ea:	08 17       	cp	r16, r24
    10ec:	20 f0       	brcs	.+8      	; 0x10f6 <xTaskGenericCreate+0x180>
    10ee:	70 92 53 03 	sts	0x0353, r7	; 0x800353 <pxCurrentTCB+0x1>
    10f2:	60 92 52 03 	sts	0x0352, r6	; 0x800352 <pxCurrentTCB>
    10f6:	f3 01       	movw	r30, r6
    10f8:	86 89       	ldd	r24, Z+22	; 0x16
    10fa:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <uxTopUsedPriority>
    10fe:	98 17       	cp	r25, r24
    1100:	10 f4       	brcc	.+4      	; 0x1106 <xTaskGenericCreate+0x190>
    1102:	80 93 ef 02 	sts	0x02EF, r24	; 0x8002ef <uxTopUsedPriority>
    1106:	90 91 e8 02 	lds	r25, 0x02E8	; 0x8002e8 <uxTaskNumber>
    110a:	9f 5f       	subi	r25, 0xFF	; 255
    110c:	90 93 e8 02 	sts	0x02E8, r25	; 0x8002e8 <uxTaskNumber>
    1110:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    1114:	98 17       	cp	r25, r24
    1116:	10 f4       	brcc	.+4      	; 0x111c <xTaskGenericCreate+0x1a6>
    1118:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <uxTopReadyPriority>
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	9c 01       	movw	r18, r24
    1120:	22 0f       	add	r18, r18
    1122:	33 1f       	adc	r19, r19
    1124:	22 0f       	add	r18, r18
    1126:	33 1f       	adc	r19, r19
    1128:	22 0f       	add	r18, r18
    112a:	33 1f       	adc	r19, r19
    112c:	82 0f       	add	r24, r18
    112e:	93 1f       	adc	r25, r19
    1130:	b6 01       	movw	r22, r12
    1132:	8b 5d       	subi	r24, 0xDB	; 219
    1134:	9c 4f       	sbci	r25, 0xFC	; 252
    1136:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    113a:	0f 90       	pop	r0
    113c:	0f be       	out	0x3f, r0	; 63
    113e:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <xSchedulerRunning>
    1142:	88 23       	and	r24, r24
    1144:	59 f0       	breq	.+22     	; 0x115c <xTaskGenericCreate+0x1e6>
    1146:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <pxCurrentTCB>
    114a:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    114e:	86 89       	ldd	r24, Z+22	; 0x16
    1150:	80 17       	cp	r24, r16
    1152:	30 f4       	brcc	.+12     	; 0x1160 <xTaskGenericCreate+0x1ea>
    1154:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	0a c0       	rjmp	.+20     	; 0x1170 <xTaskGenericCreate+0x1fa>
    115c:	81 e0       	ldi	r24, 0x01	; 1
    115e:	08 c0       	rjmp	.+16     	; 0x1170 <xTaskGenericCreate+0x1fa>
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	06 c0       	rjmp	.+12     	; 0x1170 <xTaskGenericCreate+0x1fa>
    1164:	fc 01       	movw	r30, r24
    1166:	d0 8e       	std	Z+24, r13	; 0x18
    1168:	c7 8a       	std	Z+23, r12	; 0x17
    116a:	c6 01       	movw	r24, r12
    116c:	30 cf       	rjmp	.-416    	; 0xfce <xTaskGenericCreate+0x58>
    116e:	8f ef       	ldi	r24, 0xFF	; 255
    1170:	df 91       	pop	r29
    1172:	cf 91       	pop	r28
    1174:	1f 91       	pop	r17
    1176:	0f 91       	pop	r16
    1178:	ff 90       	pop	r15
    117a:	ef 90       	pop	r14
    117c:	df 90       	pop	r13
    117e:	cf 90       	pop	r12
    1180:	bf 90       	pop	r11
    1182:	af 90       	pop	r10
    1184:	9f 90       	pop	r9
    1186:	8f 90       	pop	r8
    1188:	7f 90       	pop	r7
    118a:	6f 90       	pop	r6
    118c:	5f 90       	pop	r5
    118e:	4f 90       	pop	r4
    1190:	08 95       	ret

00001192 <vTaskDelete>:
    1192:	ef 92       	push	r14
    1194:	ff 92       	push	r15
    1196:	0f 93       	push	r16
    1198:	1f 93       	push	r17
    119a:	cf 93       	push	r28
    119c:	df 93       	push	r29
    119e:	ec 01       	movw	r28, r24
    11a0:	0f b6       	in	r0, 0x3f	; 63
    11a2:	f8 94       	cli
    11a4:	0f 92       	push	r0
    11a6:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <pxCurrentTCB>
    11aa:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    11ae:	8c 17       	cp	r24, r28
    11b0:	9d 07       	cpc	r25, r29
    11b2:	11 f0       	breq	.+4      	; 0x11b8 <vTaskDelete+0x26>
    11b4:	20 97       	sbiw	r28, 0x00	; 0
    11b6:	39 f4       	brne	.+14     	; 0x11c6 <vTaskDelete+0x34>
    11b8:	c0 91 52 03 	lds	r28, 0x0352	; 0x800352 <pxCurrentTCB>
    11bc:	d0 91 53 03 	lds	r29, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    11c0:	e1 2c       	mov	r14, r1
    11c2:	f1 2c       	mov	r15, r1
    11c4:	01 c0       	rjmp	.+2      	; 0x11c8 <vTaskDelete+0x36>
    11c6:	7e 01       	movw	r14, r28
    11c8:	8e 01       	movw	r16, r28
    11ca:	0e 5f       	subi	r16, 0xFE	; 254
    11cc:	1f 4f       	sbci	r17, 0xFF	; 255
    11ce:	c8 01       	movw	r24, r16
    11d0:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    11d4:	8c 89       	ldd	r24, Y+20	; 0x14
    11d6:	9d 89       	ldd	r25, Y+21	; 0x15
    11d8:	89 2b       	or	r24, r25
    11da:	21 f0       	breq	.+8      	; 0x11e4 <vTaskDelete+0x52>
    11dc:	ce 01       	movw	r24, r28
    11de:	0c 96       	adiw	r24, 0x0c	; 12
    11e0:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    11e4:	b8 01       	movw	r22, r16
    11e6:	8d ef       	ldi	r24, 0xFD	; 253
    11e8:	92 e0       	ldi	r25, 0x02	; 2
    11ea:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    11ee:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <uxTasksDeleted>
    11f2:	8f 5f       	subi	r24, 0xFF	; 255
    11f4:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <uxTasksDeleted>
    11f8:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <uxTaskNumber>
    11fc:	8f 5f       	subi	r24, 0xFF	; 255
    11fe:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <uxTaskNumber>
    1202:	0f 90       	pop	r0
    1204:	0f be       	out	0x3f, r0	; 63
    1206:	80 91 ed 02 	lds	r24, 0x02ED	; 0x8002ed <xSchedulerRunning>
    120a:	88 23       	and	r24, r24
    120c:	21 f0       	breq	.+8      	; 0x1216 <vTaskDelete+0x84>
    120e:	ef 28       	or	r14, r15
    1210:	11 f4       	brne	.+4      	; 0x1216 <vTaskDelete+0x84>
    1212:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
    1216:	df 91       	pop	r29
    1218:	cf 91       	pop	r28
    121a:	1f 91       	pop	r17
    121c:	0f 91       	pop	r16
    121e:	ff 90       	pop	r15
    1220:	ef 90       	pop	r14
    1222:	08 95       	ret

00001224 <vTaskStartScheduler>:
    1224:	af 92       	push	r10
    1226:	bf 92       	push	r11
    1228:	cf 92       	push	r12
    122a:	df 92       	push	r13
    122c:	ef 92       	push	r14
    122e:	ff 92       	push	r15
    1230:	0f 93       	push	r16
    1232:	a1 2c       	mov	r10, r1
    1234:	b1 2c       	mov	r11, r1
    1236:	c1 2c       	mov	r12, r1
    1238:	d1 2c       	mov	r13, r1
    123a:	e1 2c       	mov	r14, r1
    123c:	f1 2c       	mov	r15, r1
    123e:	00 e0       	ldi	r16, 0x00	; 0
    1240:	20 e0       	ldi	r18, 0x00	; 0
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	45 e5       	ldi	r20, 0x55	; 85
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	65 e8       	ldi	r22, 0x85	; 133
    124a:	70 e0       	ldi	r23, 0x00	; 0
    124c:	80 ee       	ldi	r24, 0xE0	; 224
    124e:	9a e0       	ldi	r25, 0x0A	; 10
    1250:	0e 94 bb 07 	call	0xf76	; 0xf76 <xTaskGenericCreate>
    1254:	81 30       	cpi	r24, 0x01	; 1
    1256:	49 f4       	brne	.+18     	; 0x126a <vTaskStartScheduler+0x46>
    1258:	f8 94       	cli
    125a:	80 93 ed 02 	sts	0x02ED, r24	; 0x8002ed <xSchedulerRunning>
    125e:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <xTickCount+0x1>
    1262:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <xTickCount>
    1266:	0e 94 97 04 	call	0x92e	; 0x92e <xPortStartScheduler>
    126a:	0f 91       	pop	r16
    126c:	ff 90       	pop	r15
    126e:	ef 90       	pop	r14
    1270:	df 90       	pop	r13
    1272:	cf 90       	pop	r12
    1274:	bf 90       	pop	r11
    1276:	af 90       	pop	r10
    1278:	08 95       	ret

0000127a <vTaskSuspendAll>:
    127a:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    127e:	8f 5f       	subi	r24, 0xFF	; 255
    1280:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <uxSchedulerSuspended>
    1284:	08 95       	ret

00001286 <xTaskGetTickCount>:
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	0f 92       	push	r0
    128c:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    1290:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1294:	0f 90       	pop	r0
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	08 95       	ret

0000129a <vTaskIncrementTick>:
    129a:	0f 93       	push	r16
    129c:	1f 93       	push	r17
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    12a6:	81 11       	cpse	r24, r1
    12a8:	b2 c0       	rjmp	.+356    	; 0x140e <vTaskIncrementTick+0x174>
    12aa:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    12ae:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    12b2:	01 96       	adiw	r24, 0x01	; 1
    12b4:	90 93 f1 02 	sts	0x02F1, r25	; 0x8002f1 <xTickCount+0x1>
    12b8:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <xTickCount>
    12bc:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    12c0:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    12c4:	89 2b       	or	r24, r25
    12c6:	99 f5       	brne	.+102    	; 0x132e <vTaskIncrementTick+0x94>
    12c8:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <pxDelayedTaskList>
    12cc:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    12d0:	20 91 0f 03 	lds	r18, 0x030F	; 0x80030f <pxOverflowDelayedTaskList>
    12d4:	30 91 10 03 	lds	r19, 0x0310	; 0x800310 <pxOverflowDelayedTaskList+0x1>
    12d8:	30 93 12 03 	sts	0x0312, r19	; 0x800312 <pxDelayedTaskList+0x1>
    12dc:	20 93 11 03 	sts	0x0311, r18	; 0x800311 <pxDelayedTaskList>
    12e0:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <pxOverflowDelayedTaskList+0x1>
    12e4:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <pxOverflowDelayedTaskList>
    12e8:	80 91 e9 02 	lds	r24, 0x02E9	; 0x8002e9 <xNumOfOverflows>
    12ec:	8f 5f       	subi	r24, 0xFF	; 255
    12ee:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <xNumOfOverflows>
    12f2:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    12f6:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    12fa:	80 81       	ld	r24, Z
    12fc:	81 11       	cpse	r24, r1
    12fe:	07 c0       	rjmp	.+14     	; 0x130e <vTaskIncrementTick+0x74>
    1300:	8f ef       	ldi	r24, 0xFF	; 255
    1302:	9f ef       	ldi	r25, 0xFF	; 255
    1304:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1308:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    130c:	10 c0       	rjmp	.+32     	; 0x132e <vTaskIncrementTick+0x94>
    130e:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    1312:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    1316:	05 80       	ldd	r0, Z+5	; 0x05
    1318:	f6 81       	ldd	r31, Z+6	; 0x06
    131a:	e0 2d       	mov	r30, r0
    131c:	06 80       	ldd	r0, Z+6	; 0x06
    131e:	f7 81       	ldd	r31, Z+7	; 0x07
    1320:	e0 2d       	mov	r30, r0
    1322:	82 81       	ldd	r24, Z+2	; 0x02
    1324:	93 81       	ldd	r25, Z+3	; 0x03
    1326:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    132a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    132e:	20 91 f0 02 	lds	r18, 0x02F0	; 0x8002f0 <xTickCount>
    1332:	30 91 f1 02 	lds	r19, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1336:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    133a:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    133e:	28 17       	cp	r18, r24
    1340:	39 07       	cpc	r19, r25
    1342:	08 f4       	brcc	.+2      	; 0x1346 <vTaskIncrementTick+0xac>
    1344:	69 c0       	rjmp	.+210    	; 0x1418 <vTaskIncrementTick+0x17e>
    1346:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    134a:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    134e:	80 81       	ld	r24, Z
    1350:	88 23       	and	r24, r24
    1352:	99 f0       	breq	.+38     	; 0x137a <vTaskIncrementTick+0xe0>
    1354:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    1358:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    135c:	05 80       	ldd	r0, Z+5	; 0x05
    135e:	f6 81       	ldd	r31, Z+6	; 0x06
    1360:	e0 2d       	mov	r30, r0
    1362:	c6 81       	ldd	r28, Z+6	; 0x06
    1364:	d7 81       	ldd	r29, Z+7	; 0x07
    1366:	8a 81       	ldd	r24, Y+2	; 0x02
    1368:	9b 81       	ldd	r25, Y+3	; 0x03
    136a:	20 91 f0 02 	lds	r18, 0x02F0	; 0x8002f0 <xTickCount>
    136e:	30 91 f1 02 	lds	r19, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1372:	28 17       	cp	r18, r24
    1374:	39 07       	cpc	r19, r25
    1376:	f8 f4       	brcc	.+62     	; 0x13b6 <vTaskIncrementTick+0x11c>
    1378:	19 c0       	rjmp	.+50     	; 0x13ac <vTaskIncrementTick+0x112>
    137a:	8f ef       	ldi	r24, 0xFF	; 255
    137c:	9f ef       	ldi	r25, 0xFF	; 255
    137e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1382:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1386:	48 c0       	rjmp	.+144    	; 0x1418 <vTaskIncrementTick+0x17e>
    1388:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    138c:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    1390:	05 80       	ldd	r0, Z+5	; 0x05
    1392:	f6 81       	ldd	r31, Z+6	; 0x06
    1394:	e0 2d       	mov	r30, r0
    1396:	c6 81       	ldd	r28, Z+6	; 0x06
    1398:	d7 81       	ldd	r29, Z+7	; 0x07
    139a:	8a 81       	ldd	r24, Y+2	; 0x02
    139c:	9b 81       	ldd	r25, Y+3	; 0x03
    139e:	20 91 f0 02 	lds	r18, 0x02F0	; 0x8002f0 <xTickCount>
    13a2:	30 91 f1 02 	lds	r19, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    13a6:	28 17       	cp	r18, r24
    13a8:	39 07       	cpc	r19, r25
    13aa:	28 f4       	brcc	.+10     	; 0x13b6 <vTaskIncrementTick+0x11c>
    13ac:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    13b0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    13b4:	31 c0       	rjmp	.+98     	; 0x1418 <vTaskIncrementTick+0x17e>
    13b6:	8e 01       	movw	r16, r28
    13b8:	0e 5f       	subi	r16, 0xFE	; 254
    13ba:	1f 4f       	sbci	r17, 0xFF	; 255
    13bc:	c8 01       	movw	r24, r16
    13be:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    13c2:	8c 89       	ldd	r24, Y+20	; 0x14
    13c4:	9d 89       	ldd	r25, Y+21	; 0x15
    13c6:	89 2b       	or	r24, r25
    13c8:	21 f0       	breq	.+8      	; 0x13d2 <vTaskIncrementTick+0x138>
    13ca:	ce 01       	movw	r24, r28
    13cc:	0c 96       	adiw	r24, 0x0c	; 12
    13ce:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    13d2:	8e 89       	ldd	r24, Y+22	; 0x16
    13d4:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    13d8:	98 17       	cp	r25, r24
    13da:	10 f4       	brcc	.+4      	; 0x13e0 <vTaskIncrementTick+0x146>
    13dc:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <uxTopReadyPriority>
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	9c 01       	movw	r18, r24
    13e4:	22 0f       	add	r18, r18
    13e6:	33 1f       	adc	r19, r19
    13e8:	22 0f       	add	r18, r18
    13ea:	33 1f       	adc	r19, r19
    13ec:	22 0f       	add	r18, r18
    13ee:	33 1f       	adc	r19, r19
    13f0:	82 0f       	add	r24, r18
    13f2:	93 1f       	adc	r25, r19
    13f4:	b8 01       	movw	r22, r16
    13f6:	8b 5d       	subi	r24, 0xDB	; 219
    13f8:	9c 4f       	sbci	r25, 0xFC	; 252
    13fa:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    13fe:	e0 91 11 03 	lds	r30, 0x0311	; 0x800311 <pxDelayedTaskList>
    1402:	f0 91 12 03 	lds	r31, 0x0312	; 0x800312 <pxDelayedTaskList+0x1>
    1406:	80 81       	ld	r24, Z
    1408:	81 11       	cpse	r24, r1
    140a:	be cf       	rjmp	.-132    	; 0x1388 <vTaskIncrementTick+0xee>
    140c:	b6 cf       	rjmp	.-148    	; 0x137a <vTaskIncrementTick+0xe0>
    140e:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <uxMissedTicks>
    1412:	8f 5f       	subi	r24, 0xFF	; 255
    1414:	80 93 eb 02 	sts	0x02EB, r24	; 0x8002eb <uxMissedTicks>
    1418:	df 91       	pop	r29
    141a:	cf 91       	pop	r28
    141c:	1f 91       	pop	r17
    141e:	0f 91       	pop	r16
    1420:	08 95       	ret

00001422 <xTaskResumeAll>:
    1422:	cf 92       	push	r12
    1424:	df 92       	push	r13
    1426:	ef 92       	push	r14
    1428:	ff 92       	push	r15
    142a:	0f 93       	push	r16
    142c:	1f 93       	push	r17
    142e:	cf 93       	push	r28
    1430:	df 93       	push	r29
    1432:	0f b6       	in	r0, 0x3f	; 63
    1434:	f8 94       	cli
    1436:	0f 92       	push	r0
    1438:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    143c:	81 50       	subi	r24, 0x01	; 1
    143e:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <uxSchedulerSuspended>
    1442:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    1446:	81 11       	cpse	r24, r1
    1448:	63 c0       	rjmp	.+198    	; 0x1510 <xTaskResumeAll+0xee>
    144a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <uxCurrentNumberOfTasks>
    144e:	81 11       	cpse	r24, r1
    1450:	32 c0       	rjmp	.+100    	; 0x14b6 <xTaskResumeAll+0x94>
    1452:	61 c0       	rjmp	.+194    	; 0x1516 <xTaskResumeAll+0xf4>
    1454:	d7 01       	movw	r26, r14
    1456:	15 96       	adiw	r26, 0x05	; 5
    1458:	ed 91       	ld	r30, X+
    145a:	fc 91       	ld	r31, X
    145c:	16 97       	sbiw	r26, 0x06	; 6
    145e:	c6 81       	ldd	r28, Z+6	; 0x06
    1460:	d7 81       	ldd	r29, Z+7	; 0x07
    1462:	ce 01       	movw	r24, r28
    1464:	0c 96       	adiw	r24, 0x0c	; 12
    1466:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    146a:	8e 01       	movw	r16, r28
    146c:	0e 5f       	subi	r16, 0xFE	; 254
    146e:	1f 4f       	sbci	r17, 0xFF	; 255
    1470:	c8 01       	movw	r24, r16
    1472:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    1476:	8e 89       	ldd	r24, Y+22	; 0x16
    1478:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    147c:	98 17       	cp	r25, r24
    147e:	10 f4       	brcc	.+4      	; 0x1484 <xTaskResumeAll+0x62>
    1480:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <uxTopReadyPriority>
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	9c 01       	movw	r18, r24
    1488:	22 0f       	add	r18, r18
    148a:	33 1f       	adc	r19, r19
    148c:	22 0f       	add	r18, r18
    148e:	33 1f       	adc	r19, r19
    1490:	22 0f       	add	r18, r18
    1492:	33 1f       	adc	r19, r19
    1494:	82 0f       	add	r24, r18
    1496:	93 1f       	adc	r25, r19
    1498:	b8 01       	movw	r22, r16
    149a:	8b 5d       	subi	r24, 0xDB	; 219
    149c:	9c 4f       	sbci	r25, 0xFC	; 252
    149e:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    14a2:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <pxCurrentTCB>
    14a6:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    14aa:	9e 89       	ldd	r25, Y+22	; 0x16
    14ac:	86 89       	ldd	r24, Z+22	; 0x16
    14ae:	98 17       	cp	r25, r24
    14b0:	58 f0       	brcs	.+22     	; 0x14c8 <xTaskResumeAll+0xa6>
    14b2:	dc 2c       	mov	r13, r12
    14b4:	09 c0       	rjmp	.+18     	; 0x14c8 <xTaskResumeAll+0xa6>
    14b6:	d1 2c       	mov	r13, r1
    14b8:	0f 2e       	mov	r0, r31
    14ba:	f6 e0       	ldi	r31, 0x06	; 6
    14bc:	ef 2e       	mov	r14, r31
    14be:	f3 e0       	ldi	r31, 0x03	; 3
    14c0:	ff 2e       	mov	r15, r31
    14c2:	f0 2d       	mov	r31, r0
    14c4:	cc 24       	eor	r12, r12
    14c6:	c3 94       	inc	r12
    14c8:	f7 01       	movw	r30, r14
    14ca:	80 81       	ld	r24, Z
    14cc:	81 11       	cpse	r24, r1
    14ce:	c2 cf       	rjmp	.-124    	; 0x1454 <xTaskResumeAll+0x32>
    14d0:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <uxMissedTicks>
    14d4:	88 23       	and	r24, r24
    14d6:	79 f0       	breq	.+30     	; 0x14f6 <xTaskResumeAll+0xd4>
    14d8:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <uxMissedTicks>
    14dc:	88 23       	and	r24, r24
    14de:	59 f0       	breq	.+22     	; 0x14f6 <xTaskResumeAll+0xd4>
    14e0:	0e 94 4d 09 	call	0x129a	; 0x129a <vTaskIncrementTick>
    14e4:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <uxMissedTicks>
    14e8:	81 50       	subi	r24, 0x01	; 1
    14ea:	80 93 eb 02 	sts	0x02EB, r24	; 0x8002eb <uxMissedTicks>
    14ee:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <uxMissedTicks>
    14f2:	81 11       	cpse	r24, r1
    14f4:	f5 cf       	rjmp	.-22     	; 0x14e0 <xTaskResumeAll+0xbe>
    14f6:	f1 e0       	ldi	r31, 0x01	; 1
    14f8:	df 16       	cp	r13, r31
    14fa:	21 f0       	breq	.+8      	; 0x1504 <xTaskResumeAll+0xe2>
    14fc:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <xMissedYield>
    1500:	81 30       	cpi	r24, 0x01	; 1
    1502:	41 f4       	brne	.+16     	; 0x1514 <xTaskResumeAll+0xf2>
    1504:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <xMissedYield>
    1508:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	03 c0       	rjmp	.+6      	; 0x1516 <xTaskResumeAll+0xf4>
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	01 c0       	rjmp	.+2      	; 0x1516 <xTaskResumeAll+0xf4>
    1514:	80 e0       	ldi	r24, 0x00	; 0
    1516:	0f 90       	pop	r0
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	df 91       	pop	r29
    151c:	cf 91       	pop	r28
    151e:	1f 91       	pop	r17
    1520:	0f 91       	pop	r16
    1522:	ff 90       	pop	r15
    1524:	ef 90       	pop	r14
    1526:	df 90       	pop	r13
    1528:	cf 90       	pop	r12
    152a:	08 95       	ret

0000152c <vTaskDelayUntil>:
    152c:	0f 93       	push	r16
    152e:	1f 93       	push	r17
    1530:	cf 93       	push	r28
    1532:	df 93       	push	r29
    1534:	8c 01       	movw	r16, r24
    1536:	eb 01       	movw	r28, r22
    1538:	0e 94 3d 09 	call	0x127a	; 0x127a <vTaskSuspendAll>
    153c:	f8 01       	movw	r30, r16
    153e:	80 81       	ld	r24, Z
    1540:	91 81       	ldd	r25, Z+1	; 0x01
    1542:	c8 0f       	add	r28, r24
    1544:	d9 1f       	adc	r29, r25
    1546:	20 91 f0 02 	lds	r18, 0x02F0	; 0x8002f0 <xTickCount>
    154a:	30 91 f1 02 	lds	r19, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    154e:	28 17       	cp	r18, r24
    1550:	39 07       	cpc	r19, r25
    1552:	68 f4       	brcc	.+26     	; 0x156e <vTaskDelayUntil+0x42>
    1554:	c8 17       	cp	r28, r24
    1556:	d9 07       	cpc	r29, r25
    1558:	50 f5       	brcc	.+84     	; 0x15ae <vTaskDelayUntil+0x82>
    155a:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    155e:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1562:	d1 83       	std	Z+1, r29	; 0x01
    1564:	c0 83       	st	Z, r28
    1566:	8c 17       	cp	r24, r28
    1568:	9d 07       	cpc	r25, r29
    156a:	b0 f4       	brcc	.+44     	; 0x1598 <vTaskDelayUntil+0x6c>
    156c:	0b c0       	rjmp	.+22     	; 0x1584 <vTaskDelayUntil+0x58>
    156e:	c8 17       	cp	r28, r24
    1570:	d9 07       	cpc	r29, r25
    1572:	c8 f0       	brcs	.+50     	; 0x15a6 <vTaskDelayUntil+0x7a>
    1574:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    1578:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    157c:	8c 17       	cp	r24, r28
    157e:	9d 07       	cpc	r25, r29
    1580:	90 f0       	brcs	.+36     	; 0x15a6 <vTaskDelayUntil+0x7a>
    1582:	15 c0       	rjmp	.+42     	; 0x15ae <vTaskDelayUntil+0x82>
    1584:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <pxCurrentTCB>
    1588:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    158c:	02 96       	adiw	r24, 0x02	; 2
    158e:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    1592:	ce 01       	movw	r24, r28
    1594:	0e 94 84 07 	call	0xf08	; 0xf08 <prvAddCurrentTaskToDelayedList>
    1598:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
    159c:	81 11       	cpse	r24, r1
    159e:	0b c0       	rjmp	.+22     	; 0x15b6 <vTaskDelayUntil+0x8a>
    15a0:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
    15a4:	08 c0       	rjmp	.+16     	; 0x15b6 <vTaskDelayUntil+0x8a>
    15a6:	f8 01       	movw	r30, r16
    15a8:	d1 83       	std	Z+1, r29	; 0x01
    15aa:	c0 83       	st	Z, r28
    15ac:	eb cf       	rjmp	.-42     	; 0x1584 <vTaskDelayUntil+0x58>
    15ae:	f8 01       	movw	r30, r16
    15b0:	d1 83       	std	Z+1, r29	; 0x01
    15b2:	c0 83       	st	Z, r28
    15b4:	f1 cf       	rjmp	.-30     	; 0x1598 <vTaskDelayUntil+0x6c>
    15b6:	df 91       	pop	r29
    15b8:	cf 91       	pop	r28
    15ba:	1f 91       	pop	r17
    15bc:	0f 91       	pop	r16
    15be:	08 95       	ret

000015c0 <prvIdleTask>:
    15c0:	0d ef       	ldi	r16, 0xFD	; 253
    15c2:	12 e0       	ldi	r17, 0x02	; 2
    15c4:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <uxTasksDeleted>
    15c8:	88 23       	and	r24, r24
    15ca:	49 f1       	breq	.+82     	; 0x161e <prvIdleTask+0x5e>
    15cc:	0e 94 3d 09 	call	0x127a	; 0x127a <vTaskSuspendAll>
    15d0:	d8 01       	movw	r26, r16
    15d2:	cc 91       	ld	r28, X
    15d4:	0e 94 11 0a 	call	0x1422	; 0x1422 <xTaskResumeAll>
    15d8:	cc 23       	and	r28, r28
    15da:	09 f1       	breq	.+66     	; 0x161e <prvIdleTask+0x5e>
    15dc:	0f b6       	in	r0, 0x3f	; 63
    15de:	f8 94       	cli
    15e0:	0f 92       	push	r0
    15e2:	d8 01       	movw	r26, r16
    15e4:	15 96       	adiw	r26, 0x05	; 5
    15e6:	ed 91       	ld	r30, X+
    15e8:	fc 91       	ld	r31, X
    15ea:	16 97       	sbiw	r26, 0x06	; 6
    15ec:	c6 81       	ldd	r28, Z+6	; 0x06
    15ee:	d7 81       	ldd	r29, Z+7	; 0x07
    15f0:	ce 01       	movw	r24, r28
    15f2:	02 96       	adiw	r24, 0x02	; 2
    15f4:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    15f8:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <uxCurrentNumberOfTasks>
    15fc:	81 50       	subi	r24, 0x01	; 1
    15fe:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <uxCurrentNumberOfTasks>
    1602:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <uxTasksDeleted>
    1606:	81 50       	subi	r24, 0x01	; 1
    1608:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <uxTasksDeleted>
    160c:	0f 90       	pop	r0
    160e:	0f be       	out	0x3f, r0	; 63
    1610:	8f 89       	ldd	r24, Y+23	; 0x17
    1612:	98 8d       	ldd	r25, Y+24	; 0x18
    1614:	0e 94 7f 00 	call	0xfe	; 0xfe <vPortFree>
    1618:	ce 01       	movw	r24, r28
    161a:	0e 94 7f 00 	call	0xfe	; 0xfe <vPortFree>
    161e:	0e 94 cc 04 	call	0x998	; 0x998 <vPortYield>
    1622:	d0 cf       	rjmp	.-96     	; 0x15c4 <prvIdleTask+0x4>

00001624 <vTaskSwitchContext>:
    1624:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    1628:	81 11       	cpse	r24, r1
    162a:	13 c0       	rjmp	.+38     	; 0x1652 <vTaskSwitchContext+0x2e>
    162c:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	fc 01       	movw	r30, r24
    1634:	ee 0f       	add	r30, r30
    1636:	ff 1f       	adc	r31, r31
    1638:	ee 0f       	add	r30, r30
    163a:	ff 1f       	adc	r31, r31
    163c:	ee 0f       	add	r30, r30
    163e:	ff 1f       	adc	r31, r31
    1640:	8e 0f       	add	r24, r30
    1642:	9f 1f       	adc	r25, r31
    1644:	fc 01       	movw	r30, r24
    1646:	eb 5d       	subi	r30, 0xDB	; 219
    1648:	fc 4f       	sbci	r31, 0xFC	; 252
    164a:	80 81       	ld	r24, Z
    164c:	88 23       	and	r24, r24
    164e:	29 f0       	breq	.+10     	; 0x165a <vTaskSwitchContext+0x36>
    1650:	1b c0       	rjmp	.+54     	; 0x1688 <vTaskSwitchContext+0x64>
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <xMissedYield>
    1658:	08 95       	ret
    165a:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    165e:	81 50       	subi	r24, 0x01	; 1
    1660:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <uxTopReadyPriority>
    1664:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    1668:	90 e0       	ldi	r25, 0x00	; 0
    166a:	fc 01       	movw	r30, r24
    166c:	ee 0f       	add	r30, r30
    166e:	ff 1f       	adc	r31, r31
    1670:	ee 0f       	add	r30, r30
    1672:	ff 1f       	adc	r31, r31
    1674:	ee 0f       	add	r30, r30
    1676:	ff 1f       	adc	r31, r31
    1678:	8e 0f       	add	r24, r30
    167a:	9f 1f       	adc	r25, r31
    167c:	fc 01       	movw	r30, r24
    167e:	eb 5d       	subi	r30, 0xDB	; 219
    1680:	fc 4f       	sbci	r31, 0xFC	; 252
    1682:	80 81       	ld	r24, Z
    1684:	88 23       	and	r24, r24
    1686:	49 f3       	breq	.-46     	; 0x165a <vTaskSwitchContext+0x36>
    1688:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	9c 01       	movw	r18, r24
    1690:	22 0f       	add	r18, r18
    1692:	33 1f       	adc	r19, r19
    1694:	22 0f       	add	r18, r18
    1696:	33 1f       	adc	r19, r19
    1698:	22 0f       	add	r18, r18
    169a:	33 1f       	adc	r19, r19
    169c:	28 0f       	add	r18, r24
    169e:	39 1f       	adc	r19, r25
    16a0:	d9 01       	movw	r26, r18
    16a2:	ab 5d       	subi	r26, 0xDB	; 219
    16a4:	bc 4f       	sbci	r27, 0xFC	; 252
    16a6:	11 96       	adiw	r26, 0x01	; 1
    16a8:	ed 91       	ld	r30, X+
    16aa:	fc 91       	ld	r31, X
    16ac:	12 97       	sbiw	r26, 0x02	; 2
    16ae:	02 80       	ldd	r0, Z+2	; 0x02
    16b0:	f3 81       	ldd	r31, Z+3	; 0x03
    16b2:	e0 2d       	mov	r30, r0
    16b4:	12 96       	adiw	r26, 0x02	; 2
    16b6:	fc 93       	st	X, r31
    16b8:	ee 93       	st	-X, r30
    16ba:	11 97       	sbiw	r26, 0x01	; 1
    16bc:	28 5d       	subi	r18, 0xD8	; 216
    16be:	3c 4f       	sbci	r19, 0xFC	; 252
    16c0:	e2 17       	cp	r30, r18
    16c2:	f3 07       	cpc	r31, r19
    16c4:	29 f4       	brne	.+10     	; 0x16d0 <vTaskSwitchContext+0xac>
    16c6:	22 81       	ldd	r18, Z+2	; 0x02
    16c8:	33 81       	ldd	r19, Z+3	; 0x03
    16ca:	fd 01       	movw	r30, r26
    16cc:	32 83       	std	Z+2, r19	; 0x02
    16ce:	21 83       	std	Z+1, r18	; 0x01
    16d0:	fc 01       	movw	r30, r24
    16d2:	ee 0f       	add	r30, r30
    16d4:	ff 1f       	adc	r31, r31
    16d6:	ee 0f       	add	r30, r30
    16d8:	ff 1f       	adc	r31, r31
    16da:	ee 0f       	add	r30, r30
    16dc:	ff 1f       	adc	r31, r31
    16de:	8e 0f       	add	r24, r30
    16e0:	9f 1f       	adc	r25, r31
    16e2:	fc 01       	movw	r30, r24
    16e4:	eb 5d       	subi	r30, 0xDB	; 219
    16e6:	fc 4f       	sbci	r31, 0xFC	; 252
    16e8:	01 80       	ldd	r0, Z+1	; 0x01
    16ea:	f2 81       	ldd	r31, Z+2	; 0x02
    16ec:	e0 2d       	mov	r30, r0
    16ee:	86 81       	ldd	r24, Z+6	; 0x06
    16f0:	97 81       	ldd	r25, Z+7	; 0x07
    16f2:	90 93 53 03 	sts	0x0353, r25	; 0x800353 <pxCurrentTCB+0x1>
    16f6:	80 93 52 03 	sts	0x0352, r24	; 0x800352 <pxCurrentTCB>
    16fa:	08 95       	ret

000016fc <vTaskPlaceOnEventList>:
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	eb 01       	movw	r28, r22
    1702:	60 91 52 03 	lds	r22, 0x0352	; 0x800352 <pxCurrentTCB>
    1706:	70 91 53 03 	lds	r23, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    170a:	64 5f       	subi	r22, 0xF4	; 244
    170c:	7f 4f       	sbci	r23, 0xFF	; 255
    170e:	0e 94 45 01 	call	0x28a	; 0x28a <vListInsert>
    1712:	80 91 52 03 	lds	r24, 0x0352	; 0x800352 <pxCurrentTCB>
    1716:	90 91 53 03 	lds	r25, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    171a:	02 96       	adiw	r24, 0x02	; 2
    171c:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    1720:	cf 3f       	cpi	r28, 0xFF	; 255
    1722:	8f ef       	ldi	r24, 0xFF	; 255
    1724:	d8 07       	cpc	r29, r24
    1726:	59 f4       	brne	.+22     	; 0x173e <vTaskPlaceOnEventList+0x42>
    1728:	60 91 52 03 	lds	r22, 0x0352	; 0x800352 <pxCurrentTCB>
    172c:	70 91 53 03 	lds	r23, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    1730:	6e 5f       	subi	r22, 0xFE	; 254
    1732:	7f 4f       	sbci	r23, 0xFF	; 255
    1734:	83 ef       	ldi	r24, 0xF3	; 243
    1736:	92 e0       	ldi	r25, 0x02	; 2
    1738:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    173c:	08 c0       	rjmp	.+16     	; 0x174e <vTaskPlaceOnEventList+0x52>
    173e:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <xTickCount>
    1742:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1746:	8c 0f       	add	r24, r28
    1748:	9d 1f       	adc	r25, r29
    174a:	0e 94 84 07 	call	0xf08	; 0xf08 <prvAddCurrentTaskToDelayedList>
    174e:	df 91       	pop	r29
    1750:	cf 91       	pop	r28
    1752:	08 95       	ret

00001754 <xTaskRemoveFromEventList>:
    1754:	0f 93       	push	r16
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	dc 01       	movw	r26, r24
    175e:	15 96       	adiw	r26, 0x05	; 5
    1760:	ed 91       	ld	r30, X+
    1762:	fc 91       	ld	r31, X
    1764:	16 97       	sbiw	r26, 0x06	; 6
    1766:	c6 81       	ldd	r28, Z+6	; 0x06
    1768:	d7 81       	ldd	r29, Z+7	; 0x07
    176a:	8e 01       	movw	r16, r28
    176c:	04 5f       	subi	r16, 0xF4	; 244
    176e:	1f 4f       	sbci	r17, 0xFF	; 255
    1770:	c8 01       	movw	r24, r16
    1772:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    1776:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <uxSchedulerSuspended>
    177a:	81 11       	cpse	r24, r1
    177c:	1c c0       	rjmp	.+56     	; 0x17b6 <xTaskRemoveFromEventList+0x62>
    177e:	0a 50       	subi	r16, 0x0A	; 10
    1780:	11 09       	sbc	r17, r1
    1782:	c8 01       	movw	r24, r16
    1784:	0e 94 80 01 	call	0x300	; 0x300 <vListRemove>
    1788:	8e 89       	ldd	r24, Y+22	; 0x16
    178a:	90 91 ee 02 	lds	r25, 0x02EE	; 0x8002ee <uxTopReadyPriority>
    178e:	98 17       	cp	r25, r24
    1790:	10 f4       	brcc	.+4      	; 0x1796 <xTaskRemoveFromEventList+0x42>
    1792:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <uxTopReadyPriority>
    1796:	90 e0       	ldi	r25, 0x00	; 0
    1798:	9c 01       	movw	r18, r24
    179a:	22 0f       	add	r18, r18
    179c:	33 1f       	adc	r19, r19
    179e:	22 0f       	add	r18, r18
    17a0:	33 1f       	adc	r19, r19
    17a2:	22 0f       	add	r18, r18
    17a4:	33 1f       	adc	r19, r19
    17a6:	82 0f       	add	r24, r18
    17a8:	93 1f       	adc	r25, r19
    17aa:	b8 01       	movw	r22, r16
    17ac:	8b 5d       	subi	r24, 0xDB	; 219
    17ae:	9c 4f       	sbci	r25, 0xFC	; 252
    17b0:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    17b4:	05 c0       	rjmp	.+10     	; 0x17c0 <xTaskRemoveFromEventList+0x6c>
    17b6:	b8 01       	movw	r22, r16
    17b8:	86 e0       	ldi	r24, 0x06	; 6
    17ba:	93 e0       	ldi	r25, 0x03	; 3
    17bc:	0e 94 1e 01 	call	0x23c	; 0x23c <vListInsertEnd>
    17c0:	e0 91 52 03 	lds	r30, 0x0352	; 0x800352 <pxCurrentTCB>
    17c4:	f0 91 53 03 	lds	r31, 0x0353	; 0x800353 <pxCurrentTCB+0x1>
    17c8:	81 e0       	ldi	r24, 0x01	; 1
    17ca:	2e 89       	ldd	r18, Y+22	; 0x16
    17cc:	96 89       	ldd	r25, Z+22	; 0x16
    17ce:	29 17       	cp	r18, r25
    17d0:	08 f4       	brcc	.+2      	; 0x17d4 <xTaskRemoveFromEventList+0x80>
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	1f 91       	pop	r17
    17da:	0f 91       	pop	r16
    17dc:	08 95       	ret

000017de <vTaskSetTimeOutState>:
    17de:	20 91 e9 02 	lds	r18, 0x02E9	; 0x8002e9 <xNumOfOverflows>
    17e2:	fc 01       	movw	r30, r24
    17e4:	20 83       	st	Z, r18
    17e6:	20 91 f0 02 	lds	r18, 0x02F0	; 0x8002f0 <xTickCount>
    17ea:	30 91 f1 02 	lds	r19, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    17ee:	32 83       	std	Z+2, r19	; 0x02
    17f0:	21 83       	std	Z+1, r18	; 0x01
    17f2:	08 95       	ret

000017f4 <xTaskCheckForTimeOut>:
    17f4:	0f b6       	in	r0, 0x3f	; 63
    17f6:	f8 94       	cli
    17f8:	0f 92       	push	r0
    17fa:	db 01       	movw	r26, r22
    17fc:	2d 91       	ld	r18, X+
    17fe:	3c 91       	ld	r19, X
    1800:	2f 3f       	cpi	r18, 0xFF	; 255
    1802:	bf ef       	ldi	r27, 0xFF	; 255
    1804:	3b 07       	cpc	r19, r27
    1806:	69 f1       	breq	.+90     	; 0x1862 <xTaskCheckForTimeOut+0x6e>
    1808:	40 91 e9 02 	lds	r20, 0x02E9	; 0x8002e9 <xNumOfOverflows>
    180c:	fc 01       	movw	r30, r24
    180e:	50 81       	ld	r21, Z
    1810:	54 17       	cp	r21, r20
    1812:	51 f0       	breq	.+20     	; 0x1828 <xTaskCheckForTimeOut+0x34>
    1814:	40 91 f0 02 	lds	r20, 0x02F0	; 0x8002f0 <xTickCount>
    1818:	50 91 f1 02 	lds	r21, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    181c:	01 80       	ldd	r0, Z+1	; 0x01
    181e:	f2 81       	ldd	r31, Z+2	; 0x02
    1820:	e0 2d       	mov	r30, r0
    1822:	4e 17       	cp	r20, r30
    1824:	5f 07       	cpc	r21, r31
    1826:	f8 f4       	brcc	.+62     	; 0x1866 <xTaskCheckForTimeOut+0x72>
    1828:	40 91 f0 02 	lds	r20, 0x02F0	; 0x8002f0 <xTickCount>
    182c:	50 91 f1 02 	lds	r21, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    1830:	dc 01       	movw	r26, r24
    1832:	11 96       	adiw	r26, 0x01	; 1
    1834:	ed 91       	ld	r30, X+
    1836:	fc 91       	ld	r31, X
    1838:	12 97       	sbiw	r26, 0x02	; 2
    183a:	4e 1b       	sub	r20, r30
    183c:	5f 0b       	sbc	r21, r31
    183e:	42 17       	cp	r20, r18
    1840:	53 07       	cpc	r21, r19
    1842:	98 f4       	brcc	.+38     	; 0x186a <xTaskCheckForTimeOut+0x76>
    1844:	db 01       	movw	r26, r22
    1846:	40 91 f0 02 	lds	r20, 0x02F0	; 0x8002f0 <xTickCount>
    184a:	50 91 f1 02 	lds	r21, 0x02F1	; 0x8002f1 <xTickCount+0x1>
    184e:	4e 1b       	sub	r20, r30
    1850:	5f 0b       	sbc	r21, r31
    1852:	24 1b       	sub	r18, r20
    1854:	35 0b       	sbc	r19, r21
    1856:	2d 93       	st	X+, r18
    1858:	3c 93       	st	X, r19
    185a:	0e 94 ef 0b 	call	0x17de	; 0x17de <vTaskSetTimeOutState>
    185e:	80 e0       	ldi	r24, 0x00	; 0
    1860:	05 c0       	rjmp	.+10     	; 0x186c <xTaskCheckForTimeOut+0x78>
    1862:	80 e0       	ldi	r24, 0x00	; 0
    1864:	03 c0       	rjmp	.+6      	; 0x186c <xTaskCheckForTimeOut+0x78>
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	01 c0       	rjmp	.+2      	; 0x186c <xTaskCheckForTimeOut+0x78>
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	0f 90       	pop	r0
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	08 95       	ret

00001872 <vTaskMissedYield>:
    1872:	81 e0       	ldi	r24, 0x01	; 1
    1874:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <xMissedYield>
    1878:	08 95       	ret

0000187a <__fixunssfsi>:
    187a:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__fp_splitA>
    187e:	88 f0       	brcs	.+34     	; 0x18a2 <__fixunssfsi+0x28>
    1880:	9f 57       	subi	r25, 0x7F	; 127
    1882:	98 f0       	brcs	.+38     	; 0x18aa <__fixunssfsi+0x30>
    1884:	b9 2f       	mov	r27, r25
    1886:	99 27       	eor	r25, r25
    1888:	b7 51       	subi	r27, 0x17	; 23
    188a:	b0 f0       	brcs	.+44     	; 0x18b8 <__fixunssfsi+0x3e>
    188c:	e1 f0       	breq	.+56     	; 0x18c6 <__fixunssfsi+0x4c>
    188e:	66 0f       	add	r22, r22
    1890:	77 1f       	adc	r23, r23
    1892:	88 1f       	adc	r24, r24
    1894:	99 1f       	adc	r25, r25
    1896:	1a f0       	brmi	.+6      	; 0x189e <__fixunssfsi+0x24>
    1898:	ba 95       	dec	r27
    189a:	c9 f7       	brne	.-14     	; 0x188e <__fixunssfsi+0x14>
    189c:	14 c0       	rjmp	.+40     	; 0x18c6 <__fixunssfsi+0x4c>
    189e:	b1 30       	cpi	r27, 0x01	; 1
    18a0:	91 f0       	breq	.+36     	; 0x18c6 <__fixunssfsi+0x4c>
    18a2:	0e 94 cb 0c 	call	0x1996	; 0x1996 <__fp_zero>
    18a6:	b1 e0       	ldi	r27, 0x01	; 1
    18a8:	08 95       	ret
    18aa:	0c 94 cb 0c 	jmp	0x1996	; 0x1996 <__fp_zero>
    18ae:	67 2f       	mov	r22, r23
    18b0:	78 2f       	mov	r23, r24
    18b2:	88 27       	eor	r24, r24
    18b4:	b8 5f       	subi	r27, 0xF8	; 248
    18b6:	39 f0       	breq	.+14     	; 0x18c6 <__fixunssfsi+0x4c>
    18b8:	b9 3f       	cpi	r27, 0xF9	; 249
    18ba:	cc f3       	brlt	.-14     	; 0x18ae <__fixunssfsi+0x34>
    18bc:	86 95       	lsr	r24
    18be:	77 95       	ror	r23
    18c0:	67 95       	ror	r22
    18c2:	b3 95       	inc	r27
    18c4:	d9 f7       	brne	.-10     	; 0x18bc <__fixunssfsi+0x42>
    18c6:	3e f4       	brtc	.+14     	; 0x18d6 <__fixunssfsi+0x5c>
    18c8:	90 95       	com	r25
    18ca:	80 95       	com	r24
    18cc:	70 95       	com	r23
    18ce:	61 95       	neg	r22
    18d0:	7f 4f       	sbci	r23, 0xFF	; 255
    18d2:	8f 4f       	sbci	r24, 0xFF	; 255
    18d4:	9f 4f       	sbci	r25, 0xFF	; 255
    18d6:	08 95       	ret

000018d8 <__floatunsisf>:
    18d8:	e8 94       	clt
    18da:	09 c0       	rjmp	.+18     	; 0x18ee <__floatsisf+0x12>

000018dc <__floatsisf>:
    18dc:	97 fb       	bst	r25, 7
    18de:	3e f4       	brtc	.+14     	; 0x18ee <__floatsisf+0x12>
    18e0:	90 95       	com	r25
    18e2:	80 95       	com	r24
    18e4:	70 95       	com	r23
    18e6:	61 95       	neg	r22
    18e8:	7f 4f       	sbci	r23, 0xFF	; 255
    18ea:	8f 4f       	sbci	r24, 0xFF	; 255
    18ec:	9f 4f       	sbci	r25, 0xFF	; 255
    18ee:	99 23       	and	r25, r25
    18f0:	a9 f0       	breq	.+42     	; 0x191c <__floatsisf+0x40>
    18f2:	f9 2f       	mov	r31, r25
    18f4:	96 e9       	ldi	r25, 0x96	; 150
    18f6:	bb 27       	eor	r27, r27
    18f8:	93 95       	inc	r25
    18fa:	f6 95       	lsr	r31
    18fc:	87 95       	ror	r24
    18fe:	77 95       	ror	r23
    1900:	67 95       	ror	r22
    1902:	b7 95       	ror	r27
    1904:	f1 11       	cpse	r31, r1
    1906:	f8 cf       	rjmp	.-16     	; 0x18f8 <__floatsisf+0x1c>
    1908:	fa f4       	brpl	.+62     	; 0x1948 <__floatsisf+0x6c>
    190a:	bb 0f       	add	r27, r27
    190c:	11 f4       	brne	.+4      	; 0x1912 <__floatsisf+0x36>
    190e:	60 ff       	sbrs	r22, 0
    1910:	1b c0       	rjmp	.+54     	; 0x1948 <__floatsisf+0x6c>
    1912:	6f 5f       	subi	r22, 0xFF	; 255
    1914:	7f 4f       	sbci	r23, 0xFF	; 255
    1916:	8f 4f       	sbci	r24, 0xFF	; 255
    1918:	9f 4f       	sbci	r25, 0xFF	; 255
    191a:	16 c0       	rjmp	.+44     	; 0x1948 <__floatsisf+0x6c>
    191c:	88 23       	and	r24, r24
    191e:	11 f0       	breq	.+4      	; 0x1924 <__floatsisf+0x48>
    1920:	96 e9       	ldi	r25, 0x96	; 150
    1922:	11 c0       	rjmp	.+34     	; 0x1946 <__floatsisf+0x6a>
    1924:	77 23       	and	r23, r23
    1926:	21 f0       	breq	.+8      	; 0x1930 <__floatsisf+0x54>
    1928:	9e e8       	ldi	r25, 0x8E	; 142
    192a:	87 2f       	mov	r24, r23
    192c:	76 2f       	mov	r23, r22
    192e:	05 c0       	rjmp	.+10     	; 0x193a <__floatsisf+0x5e>
    1930:	66 23       	and	r22, r22
    1932:	71 f0       	breq	.+28     	; 0x1950 <__floatsisf+0x74>
    1934:	96 e8       	ldi	r25, 0x86	; 134
    1936:	86 2f       	mov	r24, r22
    1938:	70 e0       	ldi	r23, 0x00	; 0
    193a:	60 e0       	ldi	r22, 0x00	; 0
    193c:	2a f0       	brmi	.+10     	; 0x1948 <__floatsisf+0x6c>
    193e:	9a 95       	dec	r25
    1940:	66 0f       	add	r22, r22
    1942:	77 1f       	adc	r23, r23
    1944:	88 1f       	adc	r24, r24
    1946:	da f7       	brpl	.-10     	; 0x193e <__floatsisf+0x62>
    1948:	88 0f       	add	r24, r24
    194a:	96 95       	lsr	r25
    194c:	87 95       	ror	r24
    194e:	97 f9       	bld	r25, 7
    1950:	08 95       	ret

00001952 <__fp_split3>:
    1952:	57 fd       	sbrc	r21, 7
    1954:	90 58       	subi	r25, 0x80	; 128
    1956:	44 0f       	add	r20, r20
    1958:	55 1f       	adc	r21, r21
    195a:	59 f0       	breq	.+22     	; 0x1972 <__fp_splitA+0x10>
    195c:	5f 3f       	cpi	r21, 0xFF	; 255
    195e:	71 f0       	breq	.+28     	; 0x197c <__fp_splitA+0x1a>
    1960:	47 95       	ror	r20

00001962 <__fp_splitA>:
    1962:	88 0f       	add	r24, r24
    1964:	97 fb       	bst	r25, 7
    1966:	99 1f       	adc	r25, r25
    1968:	61 f0       	breq	.+24     	; 0x1982 <__fp_splitA+0x20>
    196a:	9f 3f       	cpi	r25, 0xFF	; 255
    196c:	79 f0       	breq	.+30     	; 0x198c <__fp_splitA+0x2a>
    196e:	87 95       	ror	r24
    1970:	08 95       	ret
    1972:	12 16       	cp	r1, r18
    1974:	13 06       	cpc	r1, r19
    1976:	14 06       	cpc	r1, r20
    1978:	55 1f       	adc	r21, r21
    197a:	f2 cf       	rjmp	.-28     	; 0x1960 <__fp_split3+0xe>
    197c:	46 95       	lsr	r20
    197e:	f1 df       	rcall	.-30     	; 0x1962 <__fp_splitA>
    1980:	08 c0       	rjmp	.+16     	; 0x1992 <__fp_splitA+0x30>
    1982:	16 16       	cp	r1, r22
    1984:	17 06       	cpc	r1, r23
    1986:	18 06       	cpc	r1, r24
    1988:	99 1f       	adc	r25, r25
    198a:	f1 cf       	rjmp	.-30     	; 0x196e <__fp_splitA+0xc>
    198c:	86 95       	lsr	r24
    198e:	71 05       	cpc	r23, r1
    1990:	61 05       	cpc	r22, r1
    1992:	08 94       	sec
    1994:	08 95       	ret

00001996 <__fp_zero>:
    1996:	e8 94       	clt

00001998 <__fp_szero>:
    1998:	bb 27       	eor	r27, r27
    199a:	66 27       	eor	r22, r22
    199c:	77 27       	eor	r23, r23
    199e:	cb 01       	movw	r24, r22
    19a0:	97 f9       	bld	r25, 7
    19a2:	08 95       	ret

000019a4 <__mulsf3>:
    19a4:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__mulsf3x>
    19a8:	0c 94 56 0d 	jmp	0x1aac	; 0x1aac <__fp_round>
    19ac:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__fp_pscA>
    19b0:	38 f0       	brcs	.+14     	; 0x19c0 <__mulsf3+0x1c>
    19b2:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fp_pscB>
    19b6:	20 f0       	brcs	.+8      	; 0x19c0 <__mulsf3+0x1c>
    19b8:	95 23       	and	r25, r21
    19ba:	11 f0       	breq	.+4      	; 0x19c0 <__mulsf3+0x1c>
    19bc:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_inf>
    19c0:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <__fp_nan>
    19c4:	11 24       	eor	r1, r1
    19c6:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_szero>

000019ca <__mulsf3x>:
    19ca:	0e 94 a9 0c 	call	0x1952	; 0x1952 <__fp_split3>
    19ce:	70 f3       	brcs	.-36     	; 0x19ac <__mulsf3+0x8>

000019d0 <__mulsf3_pse>:
    19d0:	95 9f       	mul	r25, r21
    19d2:	c1 f3       	breq	.-16     	; 0x19c4 <__mulsf3+0x20>
    19d4:	95 0f       	add	r25, r21
    19d6:	50 e0       	ldi	r21, 0x00	; 0
    19d8:	55 1f       	adc	r21, r21
    19da:	62 9f       	mul	r22, r18
    19dc:	f0 01       	movw	r30, r0
    19de:	72 9f       	mul	r23, r18
    19e0:	bb 27       	eor	r27, r27
    19e2:	f0 0d       	add	r31, r0
    19e4:	b1 1d       	adc	r27, r1
    19e6:	63 9f       	mul	r22, r19
    19e8:	aa 27       	eor	r26, r26
    19ea:	f0 0d       	add	r31, r0
    19ec:	b1 1d       	adc	r27, r1
    19ee:	aa 1f       	adc	r26, r26
    19f0:	64 9f       	mul	r22, r20
    19f2:	66 27       	eor	r22, r22
    19f4:	b0 0d       	add	r27, r0
    19f6:	a1 1d       	adc	r26, r1
    19f8:	66 1f       	adc	r22, r22
    19fa:	82 9f       	mul	r24, r18
    19fc:	22 27       	eor	r18, r18
    19fe:	b0 0d       	add	r27, r0
    1a00:	a1 1d       	adc	r26, r1
    1a02:	62 1f       	adc	r22, r18
    1a04:	73 9f       	mul	r23, r19
    1a06:	b0 0d       	add	r27, r0
    1a08:	a1 1d       	adc	r26, r1
    1a0a:	62 1f       	adc	r22, r18
    1a0c:	83 9f       	mul	r24, r19
    1a0e:	a0 0d       	add	r26, r0
    1a10:	61 1d       	adc	r22, r1
    1a12:	22 1f       	adc	r18, r18
    1a14:	74 9f       	mul	r23, r20
    1a16:	33 27       	eor	r19, r19
    1a18:	a0 0d       	add	r26, r0
    1a1a:	61 1d       	adc	r22, r1
    1a1c:	23 1f       	adc	r18, r19
    1a1e:	84 9f       	mul	r24, r20
    1a20:	60 0d       	add	r22, r0
    1a22:	21 1d       	adc	r18, r1
    1a24:	82 2f       	mov	r24, r18
    1a26:	76 2f       	mov	r23, r22
    1a28:	6a 2f       	mov	r22, r26
    1a2a:	11 24       	eor	r1, r1
    1a2c:	9f 57       	subi	r25, 0x7F	; 127
    1a2e:	50 40       	sbci	r21, 0x00	; 0
    1a30:	9a f0       	brmi	.+38     	; 0x1a58 <__mulsf3_pse+0x88>
    1a32:	f1 f0       	breq	.+60     	; 0x1a70 <__mulsf3_pse+0xa0>
    1a34:	88 23       	and	r24, r24
    1a36:	4a f0       	brmi	.+18     	; 0x1a4a <__mulsf3_pse+0x7a>
    1a38:	ee 0f       	add	r30, r30
    1a3a:	ff 1f       	adc	r31, r31
    1a3c:	bb 1f       	adc	r27, r27
    1a3e:	66 1f       	adc	r22, r22
    1a40:	77 1f       	adc	r23, r23
    1a42:	88 1f       	adc	r24, r24
    1a44:	91 50       	subi	r25, 0x01	; 1
    1a46:	50 40       	sbci	r21, 0x00	; 0
    1a48:	a9 f7       	brne	.-22     	; 0x1a34 <__mulsf3_pse+0x64>
    1a4a:	9e 3f       	cpi	r25, 0xFE	; 254
    1a4c:	51 05       	cpc	r21, r1
    1a4e:	80 f0       	brcs	.+32     	; 0x1a70 <__mulsf3_pse+0xa0>
    1a50:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_inf>
    1a54:	0c 94 cc 0c 	jmp	0x1998	; 0x1998 <__fp_szero>
    1a58:	5f 3f       	cpi	r21, 0xFF	; 255
    1a5a:	e4 f3       	brlt	.-8      	; 0x1a54 <__mulsf3_pse+0x84>
    1a5c:	98 3e       	cpi	r25, 0xE8	; 232
    1a5e:	d4 f3       	brlt	.-12     	; 0x1a54 <__mulsf3_pse+0x84>
    1a60:	86 95       	lsr	r24
    1a62:	77 95       	ror	r23
    1a64:	67 95       	ror	r22
    1a66:	b7 95       	ror	r27
    1a68:	f7 95       	ror	r31
    1a6a:	e7 95       	ror	r30
    1a6c:	9f 5f       	subi	r25, 0xFF	; 255
    1a6e:	c1 f7       	brne	.-16     	; 0x1a60 <__mulsf3_pse+0x90>
    1a70:	fe 2b       	or	r31, r30
    1a72:	88 0f       	add	r24, r24
    1a74:	91 1d       	adc	r25, r1
    1a76:	96 95       	lsr	r25
    1a78:	87 95       	ror	r24
    1a7a:	97 f9       	bld	r25, 7
    1a7c:	08 95       	ret

00001a7e <__fp_inf>:
    1a7e:	97 f9       	bld	r25, 7
    1a80:	9f 67       	ori	r25, 0x7F	; 127
    1a82:	80 e8       	ldi	r24, 0x80	; 128
    1a84:	70 e0       	ldi	r23, 0x00	; 0
    1a86:	60 e0       	ldi	r22, 0x00	; 0
    1a88:	08 95       	ret

00001a8a <__fp_nan>:
    1a8a:	9f ef       	ldi	r25, 0xFF	; 255
    1a8c:	80 ec       	ldi	r24, 0xC0	; 192
    1a8e:	08 95       	ret

00001a90 <__fp_pscA>:
    1a90:	00 24       	eor	r0, r0
    1a92:	0a 94       	dec	r0
    1a94:	16 16       	cp	r1, r22
    1a96:	17 06       	cpc	r1, r23
    1a98:	18 06       	cpc	r1, r24
    1a9a:	09 06       	cpc	r0, r25
    1a9c:	08 95       	ret

00001a9e <__fp_pscB>:
    1a9e:	00 24       	eor	r0, r0
    1aa0:	0a 94       	dec	r0
    1aa2:	12 16       	cp	r1, r18
    1aa4:	13 06       	cpc	r1, r19
    1aa6:	14 06       	cpc	r1, r20
    1aa8:	05 06       	cpc	r0, r21
    1aaa:	08 95       	ret

00001aac <__fp_round>:
    1aac:	09 2e       	mov	r0, r25
    1aae:	03 94       	inc	r0
    1ab0:	00 0c       	add	r0, r0
    1ab2:	11 f4       	brne	.+4      	; 0x1ab8 <__fp_round+0xc>
    1ab4:	88 23       	and	r24, r24
    1ab6:	52 f0       	brmi	.+20     	; 0x1acc <__fp_round+0x20>
    1ab8:	bb 0f       	add	r27, r27
    1aba:	40 f4       	brcc	.+16     	; 0x1acc <__fp_round+0x20>
    1abc:	bf 2b       	or	r27, r31
    1abe:	11 f4       	brne	.+4      	; 0x1ac4 <__fp_round+0x18>
    1ac0:	60 ff       	sbrs	r22, 0
    1ac2:	04 c0       	rjmp	.+8      	; 0x1acc <__fp_round+0x20>
    1ac4:	6f 5f       	subi	r22, 0xFF	; 255
    1ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac8:	8f 4f       	sbci	r24, 0xFF	; 255
    1aca:	9f 4f       	sbci	r25, 0xFF	; 255
    1acc:	08 95       	ret

00001ace <__tablejump2__>:
    1ace:	ee 0f       	add	r30, r30
    1ad0:	ff 1f       	adc	r31, r31
    1ad2:	05 90       	lpm	r0, Z+
    1ad4:	f4 91       	lpm	r31, Z
    1ad6:	e0 2d       	mov	r30, r0
    1ad8:	09 94       	ijmp

00001ada <memcpy>:
    1ada:	fb 01       	movw	r30, r22
    1adc:	dc 01       	movw	r26, r24
    1ade:	02 c0       	rjmp	.+4      	; 0x1ae4 <memcpy+0xa>
    1ae0:	01 90       	ld	r0, Z+
    1ae2:	0d 92       	st	X+, r0
    1ae4:	41 50       	subi	r20, 0x01	; 1
    1ae6:	50 40       	sbci	r21, 0x00	; 0
    1ae8:	d8 f7       	brcc	.-10     	; 0x1ae0 <memcpy+0x6>
    1aea:	08 95       	ret

00001aec <memset>:
    1aec:	dc 01       	movw	r26, r24
    1aee:	01 c0       	rjmp	.+2      	; 0x1af2 <memset+0x6>
    1af0:	6d 93       	st	X+, r22
    1af2:	41 50       	subi	r20, 0x01	; 1
    1af4:	50 40       	sbci	r21, 0x00	; 0
    1af6:	e0 f7       	brcc	.-8      	; 0x1af0 <memset+0x4>
    1af8:	08 95       	ret

00001afa <strncpy>:
    1afa:	fb 01       	movw	r30, r22
    1afc:	dc 01       	movw	r26, r24
    1afe:	41 50       	subi	r20, 0x01	; 1
    1b00:	50 40       	sbci	r21, 0x00	; 0
    1b02:	48 f0       	brcs	.+18     	; 0x1b16 <strncpy+0x1c>
    1b04:	01 90       	ld	r0, Z+
    1b06:	0d 92       	st	X+, r0
    1b08:	00 20       	and	r0, r0
    1b0a:	c9 f7       	brne	.-14     	; 0x1afe <strncpy+0x4>
    1b0c:	01 c0       	rjmp	.+2      	; 0x1b10 <strncpy+0x16>
    1b0e:	1d 92       	st	X+, r1
    1b10:	41 50       	subi	r20, 0x01	; 1
    1b12:	50 40       	sbci	r21, 0x00	; 0
    1b14:	e0 f7       	brcc	.-8      	; 0x1b0e <strncpy+0x14>
    1b16:	08 95       	ret

00001b18 <_exit>:
    1b18:	f8 94       	cli

00001b1a <__stop_program>:
    1b1a:	ff cf       	rjmp	.-2      	; 0x1b1a <__stop_program>
